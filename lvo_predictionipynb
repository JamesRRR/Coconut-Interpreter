{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.9"
    },
    "colab": {
      "name": "Project i - Final version.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JamesRRR/Coconut-Interpreter/blob/master/lvo_predictionipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Cq-vcnihGJyT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "02c4838b-e786-4215-ff6e-f9212e10a0f9"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZnIQEpnVzjsU"
      },
      "source": [
        "# File Processing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fAQ8adTtjvhD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 556
        },
        "outputId": "2a0f0e7b-1b12-4c7c-e93c-ebed8bcef292"
      },
      "source": [
        "import pandas as pd\n",
        "\n",
        "path= \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/dataset/project1_final_data.xlsx\"\n",
        "\n",
        "dataset = pd.read_excel(path, sheet_name = 0)\n",
        "dataset"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>病例编号</th>\n",
              "      <th>性别（男=1；女=2）</th>\n",
              "      <th>年龄</th>\n",
              "      <th>NIHSS总分</th>\n",
              "      <th>1a.意识水平</th>\n",
              "      <th>1b.意识水平提问</th>\n",
              "      <th>1c.意识水平指令</th>\n",
              "      <th>2.注视</th>\n",
              "      <th>3.视野</th>\n",
              "      <th>4.面瘫</th>\n",
              "      <th>5a.左上肢运动</th>\n",
              "      <th>5b.右上肢运动</th>\n",
              "      <th>6a.左下肢运动</th>\n",
              "      <th>6b.右下肢运动</th>\n",
              "      <th>7.共济失调</th>\n",
              "      <th>8.感觉</th>\n",
              "      <th>9.语言</th>\n",
              "      <th>10.构音障碍</th>\n",
              "      <th>11.忽视</th>\n",
              "      <th>吸烟 (是=1；否=2)</th>\n",
              "      <th>高血压 (是=1；否=2)</th>\n",
              "      <th>房颤 (是=1；否=2)</th>\n",
              "      <th>糖尿病 (是=1；否=2)</th>\n",
              "      <th>高血脂 (是=1；否=2)</th>\n",
              "      <th>冠心病 (是=1；否=2)</th>\n",
              "      <th>充血性心衰 (是=1；否=2)</th>\n",
              "      <th>既往卒中史 (是=1；否=2)</th>\n",
              "      <th>心血管病家族史 (是=1；否=2)</th>\n",
              "      <th>高同型半胱氨酸血症 (是=1；否=2)</th>\n",
              "      <th>抗血小板药用药史 (是=1；否=2)</th>\n",
              "      <th>抗凝药物用药史 (是=1；否=2)</th>\n",
              "      <th>溶栓前收缩压(mmHg)</th>\n",
              "      <th>溶栓前舒张压(mmHg)</th>\n",
              "      <th>大血管闭塞 (是=1；否=2)</th>\n",
              "      <th>ICA(1=是;2=否)</th>\n",
              "      <th>MCA(1=是;2=否)</th>\n",
              "      <th>M1(1=是;2=否)</th>\n",
              "      <th>M2(1=是;2=否)</th>\n",
              "      <th>BA(1=是;2=否)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>16619</td>\n",
              "      <td>1</td>\n",
              "      <td>78</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>156</td>\n",
              "      <td>89.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>16616</td>\n",
              "      <td>2</td>\n",
              "      <td>86</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>97</td>\n",
              "      <td>65.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>16608</td>\n",
              "      <td>1</td>\n",
              "      <td>82</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>131</td>\n",
              "      <td>79.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15877</td>\n",
              "      <td>2</td>\n",
              "      <td>81</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>156</td>\n",
              "      <td>76.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15865</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>185</td>\n",
              "      <td>124.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13948</th>\n",
              "      <td>16629</td>\n",
              "      <td>2</td>\n",
              "      <td>73</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>163</td>\n",
              "      <td>80.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13949</th>\n",
              "      <td>16628</td>\n",
              "      <td>1</td>\n",
              "      <td>66</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>169</td>\n",
              "      <td>88.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13950</th>\n",
              "      <td>16627</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>135</td>\n",
              "      <td>79.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13951</th>\n",
              "      <td>16626</td>\n",
              "      <td>2</td>\n",
              "      <td>57</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>157</td>\n",
              "      <td>93.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13952</th>\n",
              "      <td>16623</td>\n",
              "      <td>2</td>\n",
              "      <td>73</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>155</td>\n",
              "      <td>67.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>13953 rows × 39 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        病例编号  性别（男=1；女=2）  年龄  ...  M1(1=是;2=否)  M2(1=是;2=否)  BA(1=是;2=否)\n",
              "0      16619            1  78  ...            2            2            2\n",
              "1      16616            2  86  ...            2            2            2\n",
              "2      16608            1  82  ...            2            2            2\n",
              "3      15877            2  81  ...            2            2            2\n",
              "4      15865            1  67  ...            2            1            2\n",
              "...      ...          ...  ..  ...          ...          ...          ...\n",
              "13948  16629            2  73  ...            1            1            2\n",
              "13949  16628            1  66  ...            1            2            2\n",
              "13950  16627            1  65  ...            2            2            2\n",
              "13951  16626            2  57  ...            2            2            2\n",
              "13952  16623            2  73  ...            1            1            2\n",
              "\n",
              "[13953 rows x 39 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ULPWPvmUjviE"
      },
      "source": [
        "# Let's define variables columns\n",
        "categoricalInputColumns = [\n",
        "                    '性别（男=1；女=2）',  # Categorical Start\n",
        "                   '吸烟 (是=1；否=2)',\n",
        "                   '高血压 (是=1；否=2)',\n",
        "                   '房颤 (是=1；否=2)', \n",
        "                   '糖尿病 (是=1；否=2)', \n",
        "                   '冠心病 (是=1；否=2)',\n",
        "                   '充血性心衰 (是=1；否=2)', \n",
        "                   '抗凝药物用药史 (是=1；否=2)'\n",
        "]\n",
        "\n",
        "continuousInputColumns = [\n",
        "                    '年龄',  # Continuous Start\n",
        "                    '1a.意识水平', \n",
        "                   '1b.意识水平提问',\n",
        "                   '1c.意识水平指令',\n",
        "                   '2.注视', \n",
        "                   '3.视野', \n",
        "                   '4.面瘫', \n",
        "                   '5a.左上肢运动', \n",
        "                   '5b.右上肢运动', \n",
        "                   '6a.左下肢运动', \n",
        "                   '6b.右下肢运动',\n",
        "                   '7.共济失调',\n",
        "                   '8.感觉', \n",
        "                   '9.语言', \n",
        "                   '10.构音障碍', \n",
        "                   '11.忽视', \n",
        "                   '溶栓前收缩压(mmHg)',\n",
        "                   '溶栓前舒张压(mmHg)' # Continuous End\n",
        "]\n",
        "\n",
        "inputColumns = categoricalInputColumns + continuousInputColumns\n",
        "\n",
        "labelColumn = ['大血管闭塞 (是=1；否=2)'] # Label, LVO: large vessel occlusion\n",
        "\n",
        "allColumns = inputColumns + labelColumn"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YYqW9tMOJ37S"
      },
      "source": [
        "### Strip Column Name"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HrCYvUSJJ2Wp"
      },
      "source": [
        "dataset = dataset.rename(columns=lambda x: x.strip())"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vHoi4cC80-cG"
      },
      "source": [
        "### Convert continuous variable to readable format and filling all missing values with mean, persist imputer"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zVmPMeqA0-cG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 556
        },
        "outputId": "d0a7ebcc-2f7d-41e0-b8f3-1aecabee93a9"
      },
      "source": [
        "from sklearn.impute import SimpleImputer\n",
        "import numpy as np\n",
        "import pickle\n",
        "\n",
        "# Fill in missing value with average\n",
        "imputer = SimpleImputer(missing_values = np.nan, strategy=\"mean\")\n",
        "for column in continuousInputColumns:\n",
        "  if column not in dataset:\n",
        "    print(column)\n",
        "dataset[continuousInputColumns] = imputer.fit_transform(dataset[continuousInputColumns])\n",
        "\n",
        "# persist the encoder somewhere to make sure we can fill in missing values for incoming data\n",
        "filePath = 'drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/encoder/filling_value' + '.pkl'\n",
        "with open (filePath, 'wb') as f:\n",
        "    pickle.dump(imputer, open (filePath, 'wb'))\n",
        "\n",
        "dataset"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>病例编号</th>\n",
              "      <th>性别（男=1；女=2）</th>\n",
              "      <th>年龄</th>\n",
              "      <th>NIHSS总分</th>\n",
              "      <th>1a.意识水平</th>\n",
              "      <th>1b.意识水平提问</th>\n",
              "      <th>1c.意识水平指令</th>\n",
              "      <th>2.注视</th>\n",
              "      <th>3.视野</th>\n",
              "      <th>4.面瘫</th>\n",
              "      <th>5a.左上肢运动</th>\n",
              "      <th>5b.右上肢运动</th>\n",
              "      <th>6a.左下肢运动</th>\n",
              "      <th>6b.右下肢运动</th>\n",
              "      <th>7.共济失调</th>\n",
              "      <th>8.感觉</th>\n",
              "      <th>9.语言</th>\n",
              "      <th>10.构音障碍</th>\n",
              "      <th>11.忽视</th>\n",
              "      <th>吸烟 (是=1；否=2)</th>\n",
              "      <th>高血压 (是=1；否=2)</th>\n",
              "      <th>房颤 (是=1；否=2)</th>\n",
              "      <th>糖尿病 (是=1；否=2)</th>\n",
              "      <th>高血脂 (是=1；否=2)</th>\n",
              "      <th>冠心病 (是=1；否=2)</th>\n",
              "      <th>充血性心衰 (是=1；否=2)</th>\n",
              "      <th>既往卒中史 (是=1；否=2)</th>\n",
              "      <th>心血管病家族史 (是=1；否=2)</th>\n",
              "      <th>高同型半胱氨酸血症 (是=1；否=2)</th>\n",
              "      <th>抗血小板药用药史 (是=1；否=2)</th>\n",
              "      <th>抗凝药物用药史 (是=1；否=2)</th>\n",
              "      <th>溶栓前收缩压(mmHg)</th>\n",
              "      <th>溶栓前舒张压(mmHg)</th>\n",
              "      <th>大血管闭塞 (是=1；否=2)</th>\n",
              "      <th>ICA(1=是;2=否)</th>\n",
              "      <th>MCA(1=是;2=否)</th>\n",
              "      <th>M1(1=是;2=否)</th>\n",
              "      <th>M2(1=是;2=否)</th>\n",
              "      <th>BA(1=是;2=否)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>16619</td>\n",
              "      <td>1</td>\n",
              "      <td>78.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>156.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>16616</td>\n",
              "      <td>2</td>\n",
              "      <td>86.0</td>\n",
              "      <td>24</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>97.0</td>\n",
              "      <td>65.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>16608</td>\n",
              "      <td>1</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>131.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15877</td>\n",
              "      <td>2</td>\n",
              "      <td>81.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>156.0</td>\n",
              "      <td>76.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15865</td>\n",
              "      <td>1</td>\n",
              "      <td>67.0</td>\n",
              "      <td>16</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>185.0</td>\n",
              "      <td>124.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13948</th>\n",
              "      <td>16629</td>\n",
              "      <td>2</td>\n",
              "      <td>73.0</td>\n",
              "      <td>14</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>163.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13949</th>\n",
              "      <td>16628</td>\n",
              "      <td>1</td>\n",
              "      <td>66.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>169.0</td>\n",
              "      <td>88.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13950</th>\n",
              "      <td>16627</td>\n",
              "      <td>1</td>\n",
              "      <td>65.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>135.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13951</th>\n",
              "      <td>16626</td>\n",
              "      <td>2</td>\n",
              "      <td>57.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>157.0</td>\n",
              "      <td>93.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13952</th>\n",
              "      <td>16623</td>\n",
              "      <td>2</td>\n",
              "      <td>73.0</td>\n",
              "      <td>8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>155.0</td>\n",
              "      <td>67.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>13953 rows × 39 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        病例编号  性别（男=1；女=2）    年龄  ...  M1(1=是;2=否)  M2(1=是;2=否)  BA(1=是;2=否)\n",
              "0      16619            1  78.0  ...            2            2            2\n",
              "1      16616            2  86.0  ...            2            2            2\n",
              "2      16608            1  82.0  ...            2            2            2\n",
              "3      15877            2  81.0  ...            2            2            2\n",
              "4      15865            1  67.0  ...            2            1            2\n",
              "...      ...          ...   ...  ...          ...          ...          ...\n",
              "13948  16629            2  73.0  ...            1            1            2\n",
              "13949  16628            1  66.0  ...            1            2            2\n",
              "13950  16627            1  65.0  ...            2            2            2\n",
              "13951  16626            2  57.0  ...            2            2            2\n",
              "13952  16623            2  73.0  ...            1            1            2\n",
              "\n",
              "[13953 rows x 39 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VJTKfzAWjviI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 573
        },
        "outputId": "f2013ae4-5657-4a92-b5e2-c8df3584c24c"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Convert label column to (是=1；否=2) -> True.Flase\n",
        "for label in labelColumn:\n",
        "  dataset[label] = dataset[label].apply(lambda x : True if x == 1 else False)\n",
        "\n",
        "for col in categoricalInputColumns:\n",
        "  # if col in specialCols:\n",
        "  #   continue\n",
        "  dataset[col] = dataset[col].map({2: False, 1: True, np.nan: False}) \n",
        "\n",
        "# old : new\n",
        "dataset = dataset.rename(columns={\n",
        "                   '性别（男=1；女=2）': 'gender', \n",
        "                   '吸烟 (是=1；否=2)': 'smoke',\n",
        "                   '高血压 (是=1；否=2)': 'highBloodPressure',\n",
        "                   '房颤 (是=1；否=2)': 'atrialFibrillation', \n",
        "                   '糖尿病 (是=1；否=2)': 'diabetes', \n",
        "                   '冠心病 (是=1；否=2)': 'coronaryHeartDisease',\n",
        "                   '充血性心衰 (是=1；否=2)': 'congestiveHeartFailure', \n",
        "                   '抗凝药物用药史 (是=1；否=2)': 'anticoagulantMedicalHistory',\n",
        "                   '年龄': 'age',\n",
        "                    '1a.意识水平': 'NIHSS1a', \n",
        "                   '1b.意识水平提问': 'NIHSS1b',\n",
        "                   '1c.意识水平指令': 'NIHSS1c',\n",
        "                   '2.注视': 'NIHSS2', \n",
        "                   '3.视野': 'NIHSS3', \n",
        "                   '4.面瘫': 'NIHSS4', \n",
        "                   '5a.左上肢运动': 'NIHSS5a', \n",
        "                   '5b.右上肢运动': 'NIHSS5b', \n",
        "                   '6a.左下肢运动': 'NIHSS6a', \n",
        "                   '6b.右下肢运动': 'NIHSS6b',\n",
        "                   '7.共济失调' : 'NIHSS7',\n",
        "                   '8.感觉': 'NIHSS8', \n",
        "                   '9.语言': 'NIHSS9', \n",
        "                   '10.构音障碍': 'NIHSS10', \n",
        "                   '11.忽视': 'NIHSS11', \n",
        "                   '溶栓前收缩压(mmHg)': 'preThrombolysisPressure',\n",
        "                   '溶栓前舒张压(mmHg)': 'afterThrombolysisPressure',\n",
        "                    '大血管闭塞 (是=1；否=2)': 'LVO',\n",
        "})\n",
        "dataset"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "length of data set is 13953\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>病例编号</th>\n",
              "      <th>gender</th>\n",
              "      <th>age</th>\n",
              "      <th>NIHSS总分</th>\n",
              "      <th>NIHSS1a</th>\n",
              "      <th>NIHSS1b</th>\n",
              "      <th>NIHSS1c</th>\n",
              "      <th>NIHSS2</th>\n",
              "      <th>NIHSS3</th>\n",
              "      <th>NIHSS4</th>\n",
              "      <th>NIHSS5a</th>\n",
              "      <th>NIHSS5b</th>\n",
              "      <th>NIHSS6a</th>\n",
              "      <th>NIHSS6b</th>\n",
              "      <th>NIHSS7</th>\n",
              "      <th>NIHSS8</th>\n",
              "      <th>NIHSS9</th>\n",
              "      <th>NIHSS10</th>\n",
              "      <th>NIHSS11</th>\n",
              "      <th>smoke</th>\n",
              "      <th>highBloodPressure</th>\n",
              "      <th>atrialFibrillation</th>\n",
              "      <th>diabetes</th>\n",
              "      <th>高血脂 (是=1；否=2)</th>\n",
              "      <th>coronaryHeartDisease</th>\n",
              "      <th>congestiveHeartFailure</th>\n",
              "      <th>既往卒中史 (是=1；否=2)</th>\n",
              "      <th>心血管病家族史 (是=1；否=2)</th>\n",
              "      <th>高同型半胱氨酸血症 (是=1；否=2)</th>\n",
              "      <th>抗血小板药用药史 (是=1；否=2)</th>\n",
              "      <th>anticoagulantMedicalHistory</th>\n",
              "      <th>preThrombolysisPressure</th>\n",
              "      <th>afterThrombolysisPressure</th>\n",
              "      <th>LVO</th>\n",
              "      <th>ICA(1=是;2=否)</th>\n",
              "      <th>MCA(1=是;2=否)</th>\n",
              "      <th>M1(1=是;2=否)</th>\n",
              "      <th>M2(1=是;2=否)</th>\n",
              "      <th>BA(1=是;2=否)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>16619</td>\n",
              "      <td>True</td>\n",
              "      <td>78.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>156.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>16616</td>\n",
              "      <td>False</td>\n",
              "      <td>86.0</td>\n",
              "      <td>24</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>97.0</td>\n",
              "      <td>65.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>16608</td>\n",
              "      <td>True</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>131.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15877</td>\n",
              "      <td>False</td>\n",
              "      <td>81.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>156.0</td>\n",
              "      <td>76.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15865</td>\n",
              "      <td>True</td>\n",
              "      <td>67.0</td>\n",
              "      <td>16</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>185.0</td>\n",
              "      <td>124.0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13948</th>\n",
              "      <td>16629</td>\n",
              "      <td>False</td>\n",
              "      <td>73.0</td>\n",
              "      <td>14</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>163.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13949</th>\n",
              "      <td>16628</td>\n",
              "      <td>True</td>\n",
              "      <td>66.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>169.0</td>\n",
              "      <td>88.0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13950</th>\n",
              "      <td>16627</td>\n",
              "      <td>True</td>\n",
              "      <td>65.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>135.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13951</th>\n",
              "      <td>16626</td>\n",
              "      <td>False</td>\n",
              "      <td>57.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>157.0</td>\n",
              "      <td>93.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13952</th>\n",
              "      <td>16623</td>\n",
              "      <td>False</td>\n",
              "      <td>73.0</td>\n",
              "      <td>8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>155.0</td>\n",
              "      <td>67.0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>13953 rows × 39 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        病例编号  gender   age  ...  M1(1=是;2=否)  M2(1=是;2=否)  BA(1=是;2=否)\n",
              "0      16619    True  78.0  ...            2            2            2\n",
              "1      16616   False  86.0  ...            2            2            2\n",
              "2      16608    True  82.0  ...            2            2            2\n",
              "3      15877   False  81.0  ...            2            2            2\n",
              "4      15865    True  67.0  ...            2            1            2\n",
              "...      ...     ...   ...  ...          ...          ...          ...\n",
              "13948  16629   False  73.0  ...            1            1            2\n",
              "13949  16628    True  66.0  ...            1            2            2\n",
              "13950  16627    True  65.0  ...            2            2            2\n",
              "13951  16626   False  57.0  ...            2            2            2\n",
              "13952  16623   False  73.0  ...            1            1            2\n",
              "\n",
              "[13953 rows x 39 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cRVEw7XB_sK2"
      },
      "source": [
        "# dataset.to_csv(\"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/dataset/project1_04082021_processed_data.csv\", encoding='utf_8_sig')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1SWjC73DRMD7"
      },
      "source": [
        "# Import File & Define Columns"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XkUxlG4nRMEE"
      },
      "source": [
        " # Let's define variables columns\n",
        "categoricalInputColumns = [\n",
        "                  'gender',  # Categorical Start\n",
        "                  'smoke',\n",
        "                  'highBloodPressure',\n",
        "                  'atrialFibrillation', \n",
        "                  # 'pastAtrialFibrillation', \n",
        "                  # 'IHD',\n",
        "                  # 'newAtrialFibrillation',\n",
        "                  'diabetes', \n",
        "                  'coronaryHeartDisease',\n",
        "                  'congestiveHeartFailure', \n",
        "                  'anticoagulantMedicalHistory'\n",
        "]\n",
        "\n",
        "continuousInputColumns = [\n",
        "                   'age',  # Continuous Start\n",
        "                   'NIHSS1a', \n",
        "                   'NIHSS1b',\n",
        "                   'NIHSS1c',\n",
        "                   'NIHSS2', \n",
        "                   'NIHSS3', \n",
        "                   'NIHSS4', \n",
        "                   'NIHSS5a', \n",
        "                   'NIHSS5b', \n",
        "                   'NIHSS6a', \n",
        "                   'NIHSS6b',\n",
        "                   'NIHSS7',\n",
        "                   'NIHSS8', \n",
        "                   'NIHSS9', \n",
        "                   'NIHSS10', \n",
        "                   'NIHSS11', \n",
        "                   'preThrombolysisPressure',\n",
        "                   'afterThrombolysisPressure' # Continuous End\n",
        "]\n",
        "\n",
        "inputColumns = categoricalInputColumns + continuousInputColumns\n",
        "\n",
        "#labelColumn = ['ICA', 'BA', 'MCA'] # Label, LVO: large vessel occlusion\n",
        "labelColumn = ['LVO']\n",
        "allColumns = inputColumns + labelColumn"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JBY5QAwLRMEG",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dfea13bc-5092-41b6-9cb9-24bae54ee96e"
      },
      "source": [
        "#!pip install scikit-learn==0.20.4\n",
        "import sklearn\n",
        "print(sklearn.__version__) # 0.22.2.post1\n",
        "# import tensorflow as tf"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.22.2.post1\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xIZc7U3lb_Ud",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 556
        },
        "outputId": "91562448-bb6f-437f-85a4-4950500a59e7"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "dataset = pd.read_csv(\"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/dataset/project1_04082021_processed_data.csv\", header=0)\n",
        "\n",
        "dataset"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>病例编号</th>\n",
              "      <th>gender</th>\n",
              "      <th>age</th>\n",
              "      <th>NIHSS总分</th>\n",
              "      <th>NIHSS1a</th>\n",
              "      <th>NIHSS1b</th>\n",
              "      <th>NIHSS1c</th>\n",
              "      <th>NIHSS2</th>\n",
              "      <th>NIHSS3</th>\n",
              "      <th>NIHSS4</th>\n",
              "      <th>NIHSS5a</th>\n",
              "      <th>NIHSS5b</th>\n",
              "      <th>NIHSS6a</th>\n",
              "      <th>NIHSS6b</th>\n",
              "      <th>NIHSS7</th>\n",
              "      <th>NIHSS8</th>\n",
              "      <th>NIHSS9</th>\n",
              "      <th>NIHSS10</th>\n",
              "      <th>NIHSS11</th>\n",
              "      <th>smoke</th>\n",
              "      <th>highBloodPressure</th>\n",
              "      <th>atrialFibrillation</th>\n",
              "      <th>diabetes</th>\n",
              "      <th>高血脂 (是=1；否=2)</th>\n",
              "      <th>coronaryHeartDisease</th>\n",
              "      <th>congestiveHeartFailure</th>\n",
              "      <th>既往卒中史 (是=1；否=2)</th>\n",
              "      <th>心血管病家族史 (是=1；否=2)</th>\n",
              "      <th>高同型半胱氨酸血症 (是=1；否=2)</th>\n",
              "      <th>抗血小板药用药史 (是=1；否=2)</th>\n",
              "      <th>anticoagulantMedicalHistory</th>\n",
              "      <th>preThrombolysisPressure</th>\n",
              "      <th>afterThrombolysisPressure</th>\n",
              "      <th>LVO</th>\n",
              "      <th>ICA(1=是;2=否)</th>\n",
              "      <th>MCA(1=是;2=否)</th>\n",
              "      <th>M1(1=是;2=否)</th>\n",
              "      <th>M2(1=是;2=否)</th>\n",
              "      <th>BA(1=是;2=否)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>16619</td>\n",
              "      <td>True</td>\n",
              "      <td>78.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>156.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>16616</td>\n",
              "      <td>False</td>\n",
              "      <td>86.0</td>\n",
              "      <td>24</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>97.0</td>\n",
              "      <td>65.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>16608</td>\n",
              "      <td>True</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>131.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>15877</td>\n",
              "      <td>False</td>\n",
              "      <td>81.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>156.0</td>\n",
              "      <td>76.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>15865</td>\n",
              "      <td>True</td>\n",
              "      <td>67.0</td>\n",
              "      <td>16</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>185.0</td>\n",
              "      <td>124.0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13948</th>\n",
              "      <td>13948</td>\n",
              "      <td>16629</td>\n",
              "      <td>False</td>\n",
              "      <td>73.0</td>\n",
              "      <td>14</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>163.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13949</th>\n",
              "      <td>13949</td>\n",
              "      <td>16628</td>\n",
              "      <td>True</td>\n",
              "      <td>66.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>169.0</td>\n",
              "      <td>88.0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13950</th>\n",
              "      <td>13950</td>\n",
              "      <td>16627</td>\n",
              "      <td>True</td>\n",
              "      <td>65.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>135.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13951</th>\n",
              "      <td>13951</td>\n",
              "      <td>16626</td>\n",
              "      <td>False</td>\n",
              "      <td>57.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>157.0</td>\n",
              "      <td>93.0</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13952</th>\n",
              "      <td>13952</td>\n",
              "      <td>16623</td>\n",
              "      <td>False</td>\n",
              "      <td>73.0</td>\n",
              "      <td>8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>False</td>\n",
              "      <td>155.0</td>\n",
              "      <td>67.0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>13953 rows × 40 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       Unnamed: 0   病例编号  gender  ...  M1(1=是;2=否)  M2(1=是;2=否)  BA(1=是;2=否)\n",
              "0               0  16619    True  ...            2            2            2\n",
              "1               1  16616   False  ...            2            2            2\n",
              "2               2  16608    True  ...            2            2            2\n",
              "3               3  15877   False  ...            2            2            2\n",
              "4               4  15865    True  ...            2            1            2\n",
              "...           ...    ...     ...  ...          ...          ...          ...\n",
              "13948       13948  16629   False  ...            1            1            2\n",
              "13949       13949  16628    True  ...            1            2            2\n",
              "13950       13950  16627    True  ...            2            2            2\n",
              "13951       13951  16626   False  ...            2            2            2\n",
              "13952       13952  16623   False  ...            1            1            2\n",
              "\n",
              "[13953 rows x 40 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5J8oVGPH7wY-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "241432fe-94f2-4efd-d279-8ec17e2ff3d6"
      },
      "source": [
        "dataset[labelColumn].value_counts()"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LVO  \n",
              "False    9511\n",
              "True     4442\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SUHJ6ffDYKCd"
      },
      "source": [
        "import random\n",
        "\n",
        "# when debugging, do not write files or tune models\n",
        "debugMode = True\n",
        "saveFile = False\n",
        "\n",
        "# define seed in the very beginning\n",
        "seed = 42\n",
        "# seed = 47"
      ],
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y6uQLL0bvsbh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a3a2babf-de2e-463d-8502-2077cd4a251a"
      },
      "source": [
        "pip install category_encoders"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting category_encoders\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/44/57/fcef41c248701ee62e8325026b90c432adea35555cbc870aff9cfba23727/category_encoders-2.2.2-py2.py3-none-any.whl (80kB)\n",
            "\r\u001b[K     |████                            | 10kB 13.3MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 20kB 11.1MB/s eta 0:00:01\r\u001b[K     |████████████▏                   | 30kB 10.4MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 40kB 8.6MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 51kB 4.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████▍       | 61kB 4.9MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▍   | 71kB 5.2MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 81kB 3.5MB/s \n",
            "\u001b[?25hRequirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (0.5.1)\n",
            "Requirement already satisfied: scipy>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.4.1)\n",
            "Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (0.22.2.post1)\n",
            "Requirement already satisfied: statsmodels>=0.9.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (0.10.2)\n",
            "Requirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.19.5)\n",
            "Requirement already satisfied: pandas>=0.21.1 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.1.5)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from patsy>=0.5.1->category_encoders) (1.15.0)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.0->category_encoders) (1.0.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.21.1->category_encoders) (2.8.1)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.21.1->category_encoders) (2018.9)\n",
            "Installing collected packages: category-encoders\n",
            "Successfully installed category-encoders-2.2.2\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f4p70_QJI-to"
      },
      "source": [
        "# Helper Functions to be defined"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5ymLDHYnjL92"
      },
      "source": [
        "## PrePreprocessor"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XyAyNdvlPukC"
      },
      "source": [
        "# %%writefile preprocess.py\n",
        "import os\n",
        "import numpy as np\n",
        "import pickle\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import OneHotEncoder\n",
        "from sklearn import preprocessing\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.feature_selection import RFE\n",
        "from sklearn.decomposition import PCA\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.feature_selection import SelectKBest\n",
        "from sklearn.feature_selection import *\n",
        "import category_encoders as ce\n",
        "\n",
        "def flatten(listOfLists):\n",
        "    \"\"\"Flatten a list of (lists of (lists of strings)) for any level \n",
        "    of nesting\"\"\"\n",
        "    result = []\n",
        "\n",
        "    for i in listOfLists:\n",
        "        # Only append if i is a basestring (superclass of string)\n",
        "        if isinstance(i, str) or isinstance(i, int):\n",
        "            result.append(i)\n",
        "        # Otherwise call this function recursively\n",
        "        else:\n",
        "            result.extend(flatten(i))\n",
        "    return result\n",
        "\n",
        "class PreProcessor(object):\n",
        "  def __init__(self):\n",
        "    self._encoder = None\n",
        "    self._labelEncoder = None\n",
        "    self._pcaEncoder = None\n",
        "    self._featureEliminator = None\n",
        "    self._normalizer = None\n",
        "    self._featureName = None\n",
        "\n",
        "  def normalize(self, contFeatures_train):\n",
        "    if contFeatures_train.empty:\n",
        "      return contFeatures_train\n",
        "\n",
        "    if self._normalizer is None:\n",
        "      normalizer = preprocessing.Normalizer()\n",
        "      normalizer.fit(contFeatures_train)\n",
        "      self._normalizer = normalizer\n",
        "\n",
        "    contFeatures_train_values = self._normalizer.transform(contFeatures_train)\n",
        "\n",
        "    return pd.DataFrame(contFeatures_train_values, columns=contFeatures_train.columns, index=contFeatures_train.index)\n",
        "\n",
        "  def eliminateFeatures(self, feature, label = None, scoreFunction=None):\n",
        "    if self._featureEliminator is None:\n",
        "      numOfFeatures = 15\n",
        "      if scoreFunction is None:\n",
        "        selector = SelectKBest(f_regression, k=numOfFeatures)\n",
        "      else:\n",
        "        selector = SelectKBest(scoreFunction, k=numOfFeatures)\n",
        "      selector.fit(feature, label)\n",
        "      self._featureEliminator = selector\n",
        "      # self._featureName = feature\n",
        "\n",
        "    columns = [i for (i, v) in zip(feature.columns, self._featureEliminator.get_support()) if v]\n",
        "    print(\"leftover columns are\")\n",
        "    print(columns)\n",
        "\n",
        "    return pd.DataFrame(self._featureEliminator.transform(feature), columns=columns, index=feature.index)\n",
        "\n",
        "  def encodeFeatures(self, categoricalFeatures, continuousFeatures, normalize=True, enc=None, label=None, useCommonEncoder=False):\n",
        "    if categoricalFeatures.empty: \n",
        "      encodedFeatures = continuousFeatures\n",
        "\n",
        "    else:\n",
        "      encoder_path = \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project2/commonencoder/encoder.pkl\"\n",
        "\n",
        "      if self._encoder is None:\n",
        "        if useCommonEncoder:\n",
        "          print(\"use common encoder\")\n",
        "          if os.path.exists(encoder_path):\n",
        "            print(\"common encoder exists, let's use it\")\n",
        "            with open (encoder_path, 'rb') as f:\n",
        "              enc = pickle.load(f)\n",
        "          else:\n",
        "            print(\"generate a new common encoder\")\n",
        "            enc = ce.OrdinalEncoder(cols=categoricalFeatures.columns)\n",
        "\n",
        "        else:\n",
        "          if enc == 'BackwardDifferenceEncoder':\n",
        "            enc = ce.BackwardDifferenceEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'BinaryEncoder':\n",
        "            enc = ce.BinaryEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'CatBoostEncoder':\n",
        "            enc = ce.CatBoostEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'GLMMEncoder':\n",
        "            enc = ce.GLMMEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'HashingEncoder':\n",
        "            enc = ce.HashingEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'HelmertEncoder':\n",
        "            enc = ce.HelmertEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'JamesSteinEncoder':\n",
        "            enc = ce.JamesSteinEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'LeaveOneOutEncoder':\n",
        "            enc = ce.LeaveOneOutEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'MEstimateEncoder':\n",
        "            enc = ce.MEstimateEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'OneHotEncoder':\n",
        "            enc = ce.OneHotEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'OrdinalEncoder':\n",
        "            enc = ce.OrdinalEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'SumEncoder':\n",
        "            enc = ce.SumEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'PolynomialEncoder':\n",
        "            enc = ce.PolynomialEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'TargetEncoder':\n",
        "            enc = ce.TargetEncoder(cols=categoricalFeatures.columns)\n",
        "          elif enc == 'WOEEncoder':\n",
        "            enc = ce.WOEEncoder(cols=categoricalFeatures.columns)\n",
        "          else:\n",
        "            raise ValueError(\"encoder is not defnied, the value passed in is: \", enc)\n",
        "\n",
        "        print(categoricalFeatures.columns)\n",
        "        enc.fit(categoricalFeatures, y=label)\n",
        "        self._encoder = enc\n",
        "\n",
        "        if not os.path.exists(encoder_path) and useCommonEncoder:\n",
        "          with open (encoder_path, 'wb') as f:\n",
        "              pickle.dump(enc, f)\n",
        "        \n",
        "      # Encode the categorical features\n",
        "      categoricalFeatures = pd.DataFrame(self._encoder.transform(categoricalFeatures),\n",
        "                                          columns=self._encoder.get_feature_names(),\n",
        "                                          index=categoricalFeatures.index)\n",
        "\n",
        "      # normalize\n",
        "      continuousFeatures = self.normalize(continuousFeatures)\n",
        "\n",
        "      # Add the continuous features to the end of the categorical features\n",
        "      encodedFeatures = pd.concat([categoricalFeatures, continuousFeatures], axis=1)\n",
        "    return encodedFeatures\n",
        "\n",
        "  def reduceDimension(self, feature, pcaDimension=0.95):\n",
        "    if self._pcaEncoder is None:\n",
        "      pca = PCA(n_components = pcaDimension)\n",
        "      pca.fit(feature)\n",
        "      self._pcaEncoder = pca\n",
        "\n",
        "    selected_feature = self._pcaEncoder.transform(feature)\n",
        "    print(\"original shape:   \", feature.shape)\n",
        "    print(\"transformed shape:\", selected_feature.shape)\n",
        "\n",
        "      # print(\"components are:\")\n",
        "      # print(pca.components_)\n",
        "      # print(\"explained_variance_ is:\")\n",
        "      # print(pca.explained_variance_)\n",
        "\n",
        "    return pd.DataFrame(selected_feature, index=feature.index)\n",
        "\n",
        "  def encodeLables(self, label):\n",
        "    if self._labelEncoder is None:\n",
        "        lb = preprocessing.LabelBinarizer()\n",
        "        encodedLabel = lb.fit(label)\n",
        "        self._labelEncoder = lb\n",
        "\n",
        "        # print classes for readability\n",
        "        print(lb.classes_)\n",
        "\n",
        "    # Encode the categorical features\n",
        "    encodedLabel = self._labelEncoder.transform(np.reshape(label.values, (-1, 1)))\n",
        "    \n",
        "    return encodedLabel\n",
        "\n",
        "  def decodeLables(self, label_test, label_pred):\n",
        "    label_test = self._labelEncoder.inverse_transform(label_test)\n",
        "    label_pred = self._labelEncoder.inverse_transform(label_pred)\n",
        "    labels = self._labelEncoder.classes_\n",
        "\n",
        "    return label_test, label_pred, labels\n",
        "\n",
        "  def preprocess(self, features, cat_columns, cont_columns, label=None, enc=None, score_function=None, is_test=False, useCommonEncoder=False):\n",
        "    self._featureName = features\n",
        "\n",
        "    features = self.eliminateFeatures(features, label, score_function)\n",
        "    new_feature_names = [i for (i, v) in zip(self._featureName, self._featureEliminator.get_support()) if v ]\n",
        "    cat_columns = list(filter(lambda x: x in new_feature_names, cat_columns)) \n",
        "    cont_columns = list(filter(lambda x: x in new_feature_names, cont_columns)) \n",
        "\n",
        "    # split categorical data and continuous data\n",
        "    catFeatures_train = features.loc[:, cat_columns]\n",
        "    contFeatures_train = features.loc[:, cont_columns]\n",
        "\n",
        "    # encode & normalize\n",
        "    features = self.encodeFeatures(\n",
        "        catFeatures_train, contFeatures_train, normalize=True, label=label, enc=enc, useCommonEncoder=useCommonEncoder)\n",
        "        \n",
        "    return features"
      ],
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "I6yXaWAZheb7"
      },
      "source": [
        "## Train Test Split"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RERWzzBXhh_G"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "def splitData(trainTestRatio):\n",
        "  # Get features from dataset\n",
        "  features = dataset.loc[:, categoricalInputColumns + continuousInputColumns]\n",
        "  labels = dataset.loc[:, labelColumn]\n",
        "\n",
        "  # Train split data before bootstrap to make sure nothing is duplicated, stratify based on label\n",
        "  feature_train, feature_test, label_train, label_test = \\\n",
        "      train_test_split(features, labels ,test_size=trainTestRatio, random_state=seed, stratify=labels)\n",
        "\n",
        "  return feature_train, feature_test, label_train, label_test, categoricalInputColumns, continuousInputColumns"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yENbhKuv7nZK"
      },
      "source": [
        "# dataset['LVO'].value_counts()"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9G6nCxrMjknX"
      },
      "source": [
        "## Encode Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wznlPZuejnRg"
      },
      "source": [
        "import pickle\n",
        "from sklearn.feature_selection import RFE\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn import preprocessing\n",
        "import category_encoders as ce\n",
        "\n",
        "def encodeData(feature_train, feature_test, label_train, label_test, enc=None, scoreFunction=None):\n",
        "\n",
        "  # Initialize a preprocess object\n",
        "  preProcessor = PreProcessor()\n",
        "\n",
        "  feature_train = preProcessor.preprocess(feature_train, categoricalInputColumns, continuousInputColumns, label=label_train, score_function=scoreFunction, enc=enc)\n",
        "\n",
        "  # encode labels\n",
        "  label_train = preProcessor.encodeLables(label_train)\n",
        "\n",
        "  if saveFile:\n",
        "    # persist preProcessor (encoder included here)\n",
        "    filePath = 'drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/preprocessor.pkl'\n",
        "    with open (filePath, 'wb') as f:\n",
        "          pickle.dump(preProcessor, f)\n",
        "\n",
        "  feature_test = preProcessor.preprocess(feature_test, categoricalInputColumns, continuousInputColumns, label=None, score_function=scoreFunction)\n",
        "\n",
        "  print(\"check test 8\")\n",
        "  # encode labels\n",
        "  label_test = preProcessor.encodeLables(label_test)\n",
        "\n",
        "  return preProcessor, feature_train, feature_test, label_train, label_test"
      ],
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "poCJs_NuXqg3"
      },
      "source": [
        "## Resample Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W2_XYJzxXuq-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "00ee9b76-1557-4ddb-c56c-e8a2837782bb"
      },
      "source": [
        "from imblearn.over_sampling import SMOTE \n",
        "from collections import Counter\n",
        "\n",
        "def resampleData(feature_train, label_train):\n",
        "  sm = SMOTE(random_state=seed)\n",
        "  feature_train_resampled, label_train = sm.fit_resample(feature_train, label_train)\n",
        "  print('Resampled dataset shape %s' % Counter(label_train))\n",
        "  \n",
        "  # return a new dataframe\n",
        "  feature_train = pd.DataFrame(feature_train_resampled, columns=feature_train.columns)\n",
        "\n",
        "  return feature_train, label_train"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/externals/six.py:31: FutureWarning: The module is deprecated in version 0.21 and will be removed in version 0.23 since we've dropped support for Python 2.7. Please rely on the official version of six (https://pypi.org/project/six/).\n",
            "  \"(https://pypi.org/project/six/).\", FutureWarning)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.base module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.\n",
            "  warnings.warn(message, FutureWarning)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2PjCdKGaZx3q"
      },
      "source": [
        "## Parameter Tuning"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2anH617rZx3w"
      },
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.ensemble import AdaBoostClassifier\n",
        "from sklearn.ensemble import ExtraTreesClassifier\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from xgboost.sklearn import XGBClassifier\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "import numpy as np\n",
        "import pprint\n",
        "import pickle\n",
        "\n",
        "def parameterTuning(model, feature_train, label_train, feature_test, label_test):\n",
        "  \n",
        "  if model == 'knn':\n",
        "    gridDict = ['n_neighbors', 'leaf_size', 'weights', 'algorithm']\n",
        "    grid = {\n",
        "        'n_neighbors':[3, 5, 8, 10, 15],\n",
        "        'leaf_size':[3, 5, 10],\n",
        "        'weights':['uniform', 'distance'],\n",
        "        'algorithm':['auto', 'ball_tree','kd_tree','brute']}\n",
        "    modelClassifier = KNeighborsClassifier()\n",
        "\n",
        "    # do not tune our model for better runtime\n",
        "    if debugMode:\n",
        "      gridDict = ['n_neighbors']\n",
        "      grid = {'n_neighbors':[10]}\n",
        "\n",
        "  elif model == 'rf':\n",
        "    gridDict = ['n_estimators', 'max_depth', 'bootstrap', 'max_features', 'min_samples_leaf', 'min_samples_split']\n",
        "    grid = {\n",
        "        'n_estimators': [30, 50],\n",
        "        'max_depth': [10,15,20],\n",
        "        'bootstrap': [True, False],\n",
        "        'max_features': [5,8, None],\n",
        "        'min_samples_leaf': [5, 10],\n",
        "        'min_samples_split': [5, 10],\n",
        "    }\n",
        "\n",
        "    if debugMode:\n",
        "      gridDict = ['n_estimators']\n",
        "      grid = {'n_estimators': [10]}\n",
        "\n",
        "    modelClassifier = RandomForestClassifier()\n",
        "\n",
        "  elif model == 'lr':\n",
        "    gridDict = ['C', 'penalty', 'max_iter']\n",
        "    grid = {\n",
        "        'C': [0.001, 0.01, 0.1],\n",
        "        \"penalty\":[\"l1\",\"l2\"],\n",
        "        \"max_iter\": [300]\n",
        "      }\n",
        "    modelClassifier = LogisticRegression()\n",
        "\n",
        "    # do not tune our model for better runtime, use a default\n",
        "    if debugMode:\n",
        "      gridDict = ['max_iter']\n",
        "      grid = {'max_iter':[100]}\n",
        "\n",
        "  elif model == \"ada\":\n",
        "    gridDict = ['n_estimators', 'learning_rate']\n",
        "    grid = {\n",
        "        'n_estimators': [10, 30, 50],\n",
        "        \"learning_rate\": [1, 0.5]\n",
        "      }\n",
        "    modelClassifier = AdaBoostClassifier()\n",
        "\n",
        "    # do not tune our model for better runtime, use a default\n",
        "    if debugMode:\n",
        "      gridDict = ['n_estimators']\n",
        "      grid = {'n_estimators':[50]}\n",
        "\n",
        "  # Not Tunable, seems not to be useful, can remove\n",
        "  elif model == \"gnb\":\n",
        "    clf = GaussianNB()\n",
        "    clf.fit(feature_train, label_train)\n",
        "    grid_result = None\n",
        "    best_classifier = clf\n",
        "\n",
        "  elif model == 'xgb':\n",
        "    gridDict = ['learning_rate', 'n_estimators', 'max_depth']\n",
        "    grid = {\n",
        "        'learning_rate': [0.1, 0.5, 1],\n",
        "        \"n_estimators\":[10, 25, 50],\n",
        "        \"max_depth\": [5, 10, 15]\n",
        "      }\n",
        "    modelClassifier = XGBClassifier()\n",
        "\n",
        "    # do not tune our model for better runtime, use a default\n",
        "    if debugMode:\n",
        "      gridDict = ['learning_rate']\n",
        "      grid = {'learning_rate':[0.1]}\n",
        "\n",
        "  else:\n",
        "    raise ValueError('undefined model') \n",
        "\n",
        "  if model != \"gnb\":\n",
        "    # output best classifier\n",
        "    grid_result = runGrid(gridDict, grid, modelClassifier, feature_train, label_train, feature_test, label_test, model)\n",
        "    best_classifier = grid_result.best_estimator_ \n",
        "\n",
        "  if saveFile:\n",
        "    # peresited our tunned model\n",
        "    filePath = \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/models/persistedModel.pkl\"\n",
        "    with open(filePath, 'wb') as file:\n",
        "        finalModel = pickle.dump(best_classifier, file)\n",
        "\n",
        "  return grid_result, best_classifier"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hBKVsTGfZx3u"
      },
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.ensemble import ExtraTreesClassifier\n",
        "import numpy as np\n",
        "import pprint\n",
        "import pickle\n",
        "\n",
        "def runGrid(gridDict, grid, classifier, feature_train, label_train, feature_test, label_test, model, cv=5):\n",
        "  currentGrid = {}\n",
        "  numToTune = len(gridDict)\n",
        "\n",
        "  for i in range((numToTune+1)//2):\n",
        "    firstKey = gridDict[2*i]\n",
        "    currentGrid[firstKey] = grid.get(firstKey)\n",
        "\n",
        "    secondKeyExists = True if 2*i + 1 != numToTune else False\n",
        "\n",
        "    if secondKeyExists:\n",
        "      secondKey = gridDict[2*i + 1]\n",
        "      currentGrid[secondKey] = grid.get(secondKey)\n",
        "\n",
        "    print(\"current grid used is: \")\n",
        "    print(currentGrid)\n",
        "      \n",
        "    grid_search = GridSearchCV(estimator=classifier,\n",
        "        param_grid=currentGrid,\n",
        "        cv=cv,\n",
        "        verbose=0,\n",
        "        n_jobs=-1,\n",
        "        scoring ='f1_weighted')\n",
        "\n",
        "    grid_result = grid_search.fit(feature_train, label_train)\n",
        "\n",
        "    printSummary(grid_result, feature_test, label_test)\n",
        "\n",
        "    # plot tuning result graph\n",
        "    if secondKeyExists:\n",
        "      plot_grid_search_2d(grid_result.cv_results_, currentGrid[firstKey], currentGrid[secondKey], firstKey, secondKey, model)\n",
        "    else:\n",
        "      plot_grid_search_1d(grid_result.cv_results_, currentGrid[firstKey], firstKey, model)\n",
        "\n",
        "    # Let's print best param, and set them back\n",
        "    currentGrid[firstKey] = [grid_result.best_params_[firstKey]]\n",
        "\n",
        "    if secondKeyExists:\n",
        "      currentGrid[secondKey] = [grid_result.best_params_[secondKey]]\n",
        "\n",
        "    print(grid_result.best_params_)\n",
        "\n",
        "    if model == 'lr':\n",
        "        # get importance\n",
        "        importance = grid_result.best_estimator_.coef_\n",
        "        print(\"importance is \")\n",
        "        print(importance)\n",
        "        print(grid_result.best_estimator_.classes_)\n",
        "\n",
        "  return grid_result"
      ],
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ixIN9VDhjGqQ"
      },
      "source": [
        "## Plot Grid Search Tuning Progress\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hmCsFcTgJB_Q"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def plot_grid_search_2d(cv_results, grid_param_1, grid_param_2, name_param_1, name_param_2, model):\n",
        "    # Get Test Scores Mean and std for each grid search\n",
        "    scores_mean = cv_results['mean_test_score']\n",
        "    scores_mean = np.array(scores_mean).reshape(len(grid_param_2),len(grid_param_1))\n",
        "\n",
        "    scores_sd = cv_results['std_test_score']\n",
        "    scores_sd = np.array(scores_sd).reshape(len(grid_param_2),len(grid_param_1))\n",
        "\n",
        "    # Plot Grid search scores\n",
        "    _, ax = plt.subplots(1,1)\n",
        "\n",
        "    # Param1 is the X-axis, Param 2 is represented as a different curve (color line)\n",
        "    for idx, val in enumerate(grid_param_2):\n",
        "        ax.plot(grid_param_1, scores_mean[idx,:], '-o', label= name_param_2 + ': ' + str(val))\n",
        "\n",
        "    title = \"Grid Search Scores for {name_param_1} and {name_param_2}\".format(name_param_1 = name_param_1, name_param_2 = name_param_2)\n",
        "    \n",
        "    ax.set_title(title, fontsize=20, fontweight='bold')\n",
        "    ax.set_xlabel(name_param_1, fontsize=16)\n",
        "    ax.set_ylabel('CV Average Score', fontsize=16)\n",
        "    ax.legend(loc=\"best\", fontsize=15)\n",
        "    ax.grid('on')\n",
        "        \n",
        "    if saveFile:\n",
        "      fileName = \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/graphs/{name_param_1}_{name_param_2}_paramTuning\".format(name_param_1 = name_param_1, name_param_2 = name_param_2)\n",
        "      plt.savefig(fileName)\n",
        "    plt.close()\n",
        "\n",
        "def plot_grid_search_1d(cv_results, grid_param_1, name_param_1, model):\n",
        "    # Get Test Scores Mean and std for each grid search\n",
        "    scores_mean = cv_results['mean_test_score']\n",
        "\n",
        "    scores_sd = cv_results['std_test_score']\n",
        "\n",
        "    # Plot Grid search scores\n",
        "    _, ax = plt.subplots(1,1)\n",
        "\n",
        "    # Param1 is the X-axis\n",
        "    ax.plot(grid_param_1, scores_mean, '-o')\n",
        "\n",
        "    title = \"Grid Search Scores for {name_param_1}\".format(name_param_1 = name_param_1)\n",
        "    \n",
        "    ax.set_title(title, fontsize=20, fontweight='bold')\n",
        "    ax.set_xlabel(name_param_1, fontsize=16)\n",
        "    ax.set_ylabel('CV Average Score', fontsize=16)\n",
        "    ax.legend(loc=\"best\", fontsize=15)\n",
        "    ax.grid('on')\n",
        "  \n",
        "    if saveFile:\n",
        "      fileName = \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/graphs/{name_param_1}_paramTuning\".format(name_param_1 = name_param_1)\n",
        "      plt.savefig(fileName)\n",
        "    plt.close()"
      ],
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Svha2U6DZx3r"
      },
      "source": [
        "from sklearn.metrics import precision_recall_fscore_support\n",
        "from sklearn.metrics import roc_auc_score\n",
        "\n",
        "def printSummary(grid_result, feature_test, label_test):\n",
        "  # summarize results\n",
        "  print('Execution time is %s minutes' % grid_result.refit_time_)\n",
        "  print(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))\n",
        "  means = grid_result.cv_results_['mean_test_score']\n",
        "  stds = grid_result.cv_results_['std_test_score']\n",
        "  params = grid_result.cv_results_['params']\n",
        "\n",
        "  for mean, stdev, param in zip(means, stds, params):\n",
        "      print(\"%f (%f) with: %r\" % (mean, stdev, param))\n",
        "      \n",
        "  # Check prediction result, for scoring purpose, let check FP / (TP + FP ) = recall\n",
        "  best_classifier = grid_result.best_estimator_\n",
        "  label_pred = best_classifier.predict(feature_test)\n",
        "  precision, recall, fscore, support = precision_recall_fscore_support(label_test, label_pred)\n",
        "  auc = roc_auc_score(label_test, label_pred)\n",
        "  print(\"Precision is %s \\nRecall is %s \\nFscore is %s \\nSupport is %s \\nAUC is %s\" % (precision, recall, fscore, support, auc))"
      ],
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZuFloWuZjQ58"
      },
      "source": [
        "## Plot Result"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Osfotj93ULxJ"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "from sklearn.metrics import precision_recall_fscore_support\n",
        "from sklearn.metrics import roc_auc_score\n",
        "import sklearn.metrics as metrics\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "def plotResult(preProcessor, label_test, label_pred, model):\n",
        "  # Construct and plot ROC AUC\n",
        "  fpr, tpr, threshold = metrics.roc_curve(label_test, label_pred)\n",
        "  roc_auc = metrics.auc(fpr, tpr)\n",
        "\n",
        "  plt.title('Receiver Operating Characteristic')\n",
        "  plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\n",
        "  plt.legend(loc = 'lower right')\n",
        "  plt.plot([0, 1], [0, 1],'r--')\n",
        "  plt.xlim([0, 1])\n",
        "  plt.ylim([0, 1])\n",
        "  plt.ylabel('True Positive Rate')\n",
        "  plt.xlabel('False Positive Rate')\n",
        "  plt.show()\n",
        "\n",
        "  # Construct and plot confidence level\n",
        "  seed = 42\n",
        "  n_bootstraps = 1000\n",
        "  bootstrapped_scores = []\n",
        "  rng = np.random.RandomState(seed)\n",
        "  for i in range(n_bootstraps):\n",
        "      # bootstrap by sampling with replacement on the prediction indices\n",
        "      indices = rng.randint(0, len(label_pred), len(label_pred))\n",
        "      if len(np.unique(label_test[indices])) < 2:\n",
        "          # We need at least one positive and one negative sample for ROC AUC\n",
        "          # to be defined: reject the sample\n",
        "          continue\n",
        "\n",
        "      score = roc_auc_score(label_test[indices], label_pred[indices])\n",
        "      bootstrapped_scores.append(score)\n",
        "\n",
        "  sorted_scores = np.array(bootstrapped_scores)\n",
        "  sorted_scores.sort()\n",
        "\n",
        "  # Computing the lower and upper bound of the 90% confidence interval\n",
        "  # You can change the bounds percentiles to 0.025 and 0.975 to get\n",
        "  # a 95% confidence interval instead.\n",
        "  confidence_lower = sorted_scores[int(0.05 * len(sorted_scores))]\n",
        "  confidence_upper = sorted_scores[int(0.95 * len(sorted_scores))]\n",
        "  title = \"Confidence interval for the score: [{:0.3f} - {:0.3}]\".format(\n",
        "      confidence_lower, confidence_upper)\n",
        "  print(title)\n",
        "\n",
        "  filePath = \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/graphs/%s_confidence_level.pkl\" % model\n",
        "  graphPath = \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/graphs/%s_confidence_level.png\" % model\n",
        "  with open (filePath, 'wb') as f:\n",
        "    pickle.dump(bootstrapped_scores, f)\n",
        "\n",
        "  plt.hist(bootstrapped_scores, bins=50)\n",
        "  plt.title(title)\n",
        "  plt.show()\n",
        "  plt.savefig(graphPath)\n",
        "\n",
        "  if not debugMode:\n",
        "    label_test, label_pred, labels = preProcessor.decodeLables(label_test, label_pred)\n",
        "    cm = confusion_matrix(label_test, label_pred, labels)\n",
        "    print(cm)\n",
        "\n",
        "    # Plot confusion matrix\n",
        "    # https://medium.com/@dtuk81/confusion-matrix-visualization-fc31e3f30fea\n",
        "    group_names = [\"True Neg\",\"False Pos\",\"False Neg\",\"True Pos\"]\n",
        "    categories = [\"not LVO\", \"LVO\"]\n",
        "    group_counts = cm.flatten()\n",
        "    group_counts_str = [\"{0:0.0f}\".format(value) for value in\n",
        "                    cm.flatten()]\n",
        "    group_total_count = [group_counts[0] + group_counts[1],\n",
        "                        group_counts[0] + group_counts[1],\n",
        "                        group_counts[2] + group_counts[3],\n",
        "                        group_counts[2] + group_counts[3]]\n",
        "    group_percentages = [\"{0:.2%}\".format(v1/v2) for v1, v2 in\n",
        "                        zip(group_counts, group_total_count)]\n",
        "    cm_labels = [f\"{v1}\\n{v2}\\n{v3}\" for v1, v2, v3 in\n",
        "              zip(group_names,group_counts_str,group_percentages)]\n",
        "    cm_labels = np.asarray(cm_labels).reshape(2,2)\n",
        "\n",
        "    title = \"Confusion Matrix for LVO prediction\"\n",
        "\n",
        "    precision, recall, fscore, support = precision_recall_fscore_support(label_test, label_pred, average='macro')\n",
        "    auc = roc_auc_score(label_test, label_pred)\n",
        "    message = \"Precision is %s \\nRecall is %s \\nFscore is %s \\nSupport is %s \\nAUC is %s\" % (precision, recall, fscore, support, auc)\n",
        "    print(message)\n",
        "\n",
        "    figsize = plt.rcParams.get('figure.figsize')\n",
        "    plt.figure(figsize=figsize)\n",
        "    sns.heatmap(cm, annot=cm_labels, fmt=\"\", cmap='Blues', xticklabels=categories,yticklabels=categories)\n",
        "\n",
        "    plt.ylabel('True label')\n",
        "    plt.xlabel('Predicted label\\n' + message)\n",
        "    plt.title(title)\n",
        "    plt.show()\n",
        "\n",
        "    if saveFile:\n",
        "      filePath = \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/graphs/%s_confusion_matric.png\" % model\n",
        "      plt.savefig(filePath)\n",
        "\n",
        "    plt.close()\n",
        "\n",
        "  return auc"
      ],
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MUu-SG851928"
      },
      "source": [
        "# Run All\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "apaJDkb92C1p"
      },
      "source": [
        "from sklearn.metrics import precision_recall_fscore_support\n",
        "import matplotlib.pyplot as plt\n",
        "import category_encoders as ce\n",
        "from sklearn.feature_selection import *\n",
        "\n",
        "# when debugging, do not write files or tune models\n",
        "# debugMode = True\n",
        "# saveFile = True\n",
        "\n",
        "def runAll(models, trainTestRatio=0.2, encs=[None], scoreFunctions=[None]):\n",
        "  auc = 0\n",
        "  # Step 1: filling missing data, done in file processing level\n",
        "  for scoreFunction in scoreFunctions:\n",
        "    if scoreFunction == 'f_classif':\n",
        "        scoreFunction = f_classif\n",
        "    elif scoreFunction == 'mutual_info_classif':\n",
        "      scoreFunction = mutual_info_classif\n",
        "    elif scoreFunction == 'chi2':\n",
        "      scoreFunction = chi2\n",
        "    elif scoreFunction == 'f_regression':\n",
        "      scoreFunction = f_regression\n",
        "    elif scoreFunction == 'mutual_info_regression':\n",
        "      scoreFunction = mutual_info_regression\n",
        "    else:\n",
        "      raise ValueError(\"scoreFunction is not defnied, the value passed in is: \" , scoreFunction)\n",
        "\n",
        "    print(\"@@@@@@@@@@@@@@@@@@@@@@   ScoreFunction:{scoreFunction}   @@@@@@@@@@@@@@@@@@@@@\".format(scoreFunction = scoreFunction))\n",
        "\n",
        "    for enc in encs:\n",
        "      print(\"$$$$$$$$$$$$$$$$$$$$$$$$   Enc:{enc}   $$$$$$$$$$$$$$$$$$$$$$$\".format(enc = enc))\n",
        "\n",
        "      # Step 2: Split data into training and testing before bootstrap to make sure no resampled data in test data\n",
        "      feature_train, feature_test, label_train, label_test, _, _ = splitData(trainTestRatio=trainTestRatio)\n",
        "\n",
        "      # Step 3: Encode Data, process pipelin - Filter Data(RFE) / Resample Data / Split Cat variables and Con variables / Encode & Normalize All / Apply PCA / Encode lables / Persist and apply the same process to test data\n",
        "      preProcessor, encoded_feature_train, encoded_feature_test, encoded_label_train, encoded_label_test = encodeData(feature_train, feature_test, label_train, label_test, enc=enc, scoreFunction=scoreFunction)\n",
        "\n",
        "      # Step 4: Resample features \n",
        "      # encoded_feature_train, encoded_label_train = resampleData(encoded_feature_train, encoded_label_train)\n",
        "\n",
        "      for model in models:\n",
        "\n",
        "        print(\"############### Model: {model} ###############\".format(model = model))\n",
        "        # training with parameter tuning\n",
        "        grid_result, best_classifier = parameterTuning(model, encoded_feature_train, encoded_label_train, encoded_feature_test, encoded_label_test)\n",
        "\n",
        "        # plot result\n",
        "        label_pred = best_classifier.predict(encoded_feature_test)\n",
        "        auc = max(plotResult(preProcessor, encoded_label_test, label_pred, model), auc)\n",
        "  return auc"
      ],
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wSyhg3P004FR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "fb87b1bc-c6fe-483c-b300-c4c4bbe36a3c"
      },
      "source": [
        "import category_encoders as ce\n",
        "\n",
        "\n",
        "saveFile = False\n",
        "debugMode = False\n",
        "models = ['rf']\n",
        "\n",
        "# select encoding type\n",
        "encs = [\n",
        "      # 'BackwardDifferenceEncoder',\n",
        "      # ce.BinaryEncoder(),\n",
        "      # ce.CatBoostEncoder(),\n",
        "      # ce.GLMMEncoder(),\n",
        "      # ce.HashingEncoder(),\n",
        "      'HelmertEncoder',\n",
        "      # ce.JamesSteinEncoder(),\n",
        "      # ce.LeaveOneOutEncoder(),\n",
        "      # ce.MEstimateEncoder(),\n",
        "      # ce.OneHotEncoder(),\n",
        "      'OrdinalEncoder',\n",
        "      'SumEncoder',\n",
        "      # ce.PolynomialEncoder(),\n",
        "      # ce.TargetEncoder(),\n",
        "      'WOEEncoder'\n",
        "]\n",
        "\n",
        "# select score function for feature selection\n",
        "scoreFunctions=[\n",
        "      'f_classif',    #(0.791)\n",
        "      'mutual_info_classif', #(~0.798 * 5)\n",
        "      # 'chi2',  #(~0.776 * 5)\n",
        "      'f_regression', #(~0.792 * 5)\n",
        "      # 'mutual_info_regression' #(0.78*3， 0.793*2) \n",
        "]\n",
        "\n",
        "auc = runAll(models, encs=encs, scoreFunctions=scoreFunctions)\n",
        "\n",
        "print(\"^^^^^^final AUC is ^^^^^^^^^^^^^\")\n",
        "print(auc)\n",
        "\n",
        "\n",
        "\"\"\"\n",
        "w/o resample \n",
        "\n",
        " Enc:WOEEncoder + rf + f_regression\n",
        "Precision is 0.754037598729604 \n",
        "Recall is 0.7040906524839553 \n",
        "Fscore is 0.7209070584477802 \n",
        "Support is None \n",
        "AUC is 0.7040906524839554\n",
        "\n",
        "\n",
        "w/ resample\n",
        "lr + Enc:OrdinalEncoder + f_classif\n",
        "Precision is 0.7240856738735097 \n",
        "Recall is 0.7491921945566913 \n",
        "Fscore is 0.7333033718496091 \n",
        "Support is None \n",
        "AUC is 0.7491921945566912\n",
        "[[972 230]\n",
        " [139 309]]\n",
        "\"\"\""
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@   ScoreFunction:<function f_classif at 0x7fbddfd3cd40>   @@@@@@@@@@@@@@@@@@@@@\n",
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:HelmertEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.5084893703460693 minutes\n",
            "Best: 0.771662 using {'max_depth': 10, 'n_estimators': 50}\n",
            "0.768252 (0.006357) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.771662 (0.003501) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.760583 (0.003829) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.763412 (0.001057) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.750103 (0.004908) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.752866 (0.004931) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81755424 0.6802097 ] \n",
            "Recall is [0.87171399 0.58380202] \n",
            "Fscore is [0.8437659 0.6283293] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7277580050127803\n",
            "{'max_depth': 10, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.7787857055664062 minutes\n",
            "Best: 0.769457 using {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.767540 (0.004139) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.769457 (0.002596) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.767434 (0.006936) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.768619 (0.003845) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.768630 (0.005102) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.755444 (0.007094) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "Precision is [0.81701286 0.67490247] \n",
            "Recall is [0.86855941 0.58380202] \n",
            "Fscore is [0.84199796 0.62605549] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7261807179465344\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True], 'max_features': [8], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.7351300716400146 minutes\n",
            "Best: 0.771276 using {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.769965 (0.003157) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.768808 (0.003654) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.769607 (0.001777) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.771276 (0.001804) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "Precision is [0.81533952 0.68682796] \n",
            "Recall is [0.87749737 0.57480315] \n",
            "Fscore is [0.84527729 0.62584201] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7261502603972609\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.711 - 0.74]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1669  233]\n",
            " [ 378  511]]\n",
            "Precision is 0.751083739119929 \n",
            "Recall is 0.726150260397261 \n",
            "Fscore is 0.735559646980942 \n",
            "Support is None \n",
            "AUC is 0.7261502603972609\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:OrdinalEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.42411255836486816 minutes\n",
            "Best: 0.772557 using {'max_depth': 10, 'n_estimators': 50}\n",
            "0.772126 (0.002898) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.772557 (0.004140) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.759758 (0.005185) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.761438 (0.002863) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.753521 (0.004649) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.755632 (0.002413) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81515892 0.6849866 ] \n",
            "Recall is [0.87644585 0.57480315] \n",
            "Fscore is [0.84469217 0.62507645] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7256244980418457\n",
            "{'max_depth': 10, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 1.3350017070770264 minutes\n",
            "Best: 0.768960 using {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.768579 (0.004287) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.767758 (0.003541) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.768960 (0.005152) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.768297 (0.004696) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.767173 (0.005511) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.755138 (0.006777) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "Precision is [0.81481481 0.67101828] \n",
            "Recall is [0.86750789 0.57817773] \n",
            "Fscore is [0.84033613 0.62114804] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7228428071096791\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True], 'max_features': [None], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 1.2618827819824219 minutes\n",
            "Best: 0.769657 using {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.768116 (0.004042) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.768365 (0.003561) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.769657 (0.003335) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.769194 (0.004093) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "Precision is [0.81494141 0.68640646] \n",
            "Recall is [0.87749737 0.57367829] \n",
            "Fscore is [0.84506329 0.625     ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7255878307009731\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': None, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.710 - 0.74]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1669  233]\n",
            " [ 379  510]]\n",
            "Precision is 0.7506739332730484 \n",
            "Recall is 0.7255878307009731 \n",
            "Fscore is 0.7350316455696202 \n",
            "Support is None \n",
            "AUC is 0.7255878307009731\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:SumEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.49880146980285645 minutes\n",
            "Best: 0.772287 using {'max_depth': 10, 'n_estimators': 50}\n",
            "0.767628 (0.006084) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.772287 (0.004421) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.762428 (0.004884) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.758119 (0.004719) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.751288 (0.001184) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.754532 (0.003367) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81818182 0.67926988] \n",
            "Recall is [0.87066246 0.58605174] \n",
            "Fscore is [0.84360672 0.62922705] \n",
            "Support is [1902  889] \n",
            "AUC is 0.728357102049941\n",
            "{'max_depth': 10, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.5628235340118408 minutes\n",
            "Best: 0.770668 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.770668 (0.003837) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.769496 (0.003311) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.767637 (0.005679) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.767617 (0.004528) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.766963 (0.006068) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.755246 (0.006527) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "Precision is [0.81418093 0.68230563] \n",
            "Recall is [0.87539432 0.57255343] \n",
            "Fscore is [0.84367874 0.62262997] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7239738762938545\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.5516884326934814 minutes\n",
            "Best: 0.772463 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.770304 (0.005677) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.772463 (0.004320) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.772043 (0.002841) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.770238 (0.003117) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "Precision is [0.81831538 0.69158879] \n",
            "Recall is [0.8785489  0.58267717] \n",
            "Fscore is [0.84736308 0.63247863] \n",
            "Support is [1902  889] \n",
            "AUC is 0.730613030626692\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.716 - 0.745]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1671  231]\n",
            " [ 371  518]]\n",
            "Precision is 0.7549520810640109 \n",
            "Recall is 0.7306130306266921 \n",
            "Fscore is 0.7399208578214663 \n",
            "Support is None \n",
            "AUC is 0.730613030626692\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:WOEEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.428786039352417 minutes\n",
            "Best: 0.771531 using {'max_depth': 10, 'n_estimators': 50}\n",
            "0.769775 (0.004583) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.771531 (0.003791) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.762349 (0.004388) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.763509 (0.004581) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.753563 (0.007375) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.754772 (0.002810) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81625616 0.67805519] \n",
            "Recall is [0.87118822 0.58042745] \n",
            "Fscore is [0.84282808 0.62545455] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7258078347462087\n",
            "{'max_depth': 10, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.5901656150817871 minutes\n",
            "Best: 0.770433 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.770433 (0.006347) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.769704 (0.003563) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.766530 (0.003792) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.767996 (0.003511) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.767583 (0.005236) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.755608 (0.007200) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "Precision is [0.81576355 0.67674113] \n",
            "Recall is [0.87066246 0.57930259] \n",
            "Fscore is [0.84231943 0.62424242] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7249825238722131\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.566892147064209 minutes\n",
            "Best: 0.771874 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.771091 (0.002223) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.771874 (0.003033) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.771555 (0.004809) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.771618 (0.004644) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "Precision is [0.81635651 0.68624833] \n",
            "Recall is [0.87644585 0.57817773] \n",
            "Fscore is [0.84533469 0.62759463] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7273117871307095\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.713 - 0.741]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1667  235]\n",
            " [ 375  514]]\n",
            "Precision is 0.7513024221652376 \n",
            "Recall is 0.7273117871307095 \n",
            "Fscore is 0.7364646565965025 \n",
            "Support is None \n",
            "AUC is 0.7273117871307095\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@   ScoreFunction:<function mutual_info_classif at 0x7fbddf896560>   @@@@@@@@@@@@@@@@@@@@@\n",
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:HelmertEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['atrialFibrillation', 'age', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'age', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.7290456295013428 minutes\n",
            "Best: 0.775325 using {'max_depth': 10, 'n_estimators': 50}\n",
            "0.773754 (0.003379) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.775325 (0.001187) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.764931 (0.004624) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.767855 (0.002618) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.760612 (0.004209) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.762959 (0.004277) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81858626 0.6796875 ] \n",
            "Recall is [0.87066246 0.5871766 ] \n",
            "Fscore is [0.84382166 0.63005432] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7289195317462289\n",
            "{'max_depth': 10, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.8752748966217041 minutes\n",
            "Best: 0.775643 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.775643 (0.005907) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.772269 (0.002425) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.774169 (0.002232) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.773835 (0.001337) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.771791 (0.003167) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.749924 (0.005129) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "Precision is [0.816609   0.67447917] \n",
            "Recall is [0.86855941 0.58267717] \n",
            "Fscore is [0.84178344 0.62522631] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7256182882502463\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.828972578048706 minutes\n",
            "Best: 0.776203 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.775781 (0.002284) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.775422 (0.002293) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.773812 (0.002037) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.776203 (0.003627) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "Precision is [0.81706719 0.68617021] \n",
            "Recall is [0.87592008 0.58042745] \n",
            "Fscore is [0.84547069 0.62888483] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7281737653455779\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.713 - 0.742]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1666  236]\n",
            " [ 373  516]]\n",
            "Precision is 0.7516187012824392 \n",
            "Recall is 0.7281737653455779 \n",
            "Fscore is 0.7371777595214979 \n",
            "Support is None \n",
            "AUC is 0.7281737653455779\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:OrdinalEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.2714676856994629 minutes\n",
            "Best: 0.771197 using {'max_depth': 10, 'n_estimators': 30}\n",
            "0.771197 (0.003481) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.771100 (0.005011) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.763155 (0.003471) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.761600 (0.002207) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.753166 (0.007050) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.754407 (0.003064) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81849484 0.68601583] \n",
            "Recall is [0.87486856 0.58492688] \n",
            "Fscore is [0.84574333 0.63145112] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7298977217753144\n",
            "{'max_depth': 10, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.3616766929626465 minutes\n",
            "Best: 0.769873 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.769873 (0.004427) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.767637 (0.002917) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.763881 (0.004895) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "0.767060 (0.007485) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.764359 (0.004054) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.755023 (0.007508) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "Precision is [0.81965602 0.69047619] \n",
            "Recall is [0.87697161 0.5871766 ] \n",
            "Fscore is [0.84734569 0.63465046] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7320741058787211\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.33490777015686035 minutes\n",
            "Best: 0.771183 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.770601 (0.004823) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.768441 (0.002652) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.770712 (0.003398) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.771183 (0.001476) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "Precision is [0.82041217 0.69455511] \n",
            "Recall is [0.87907466 0.58830146] \n",
            "Fscore is [0.84873096 0.63702801] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7336880602858397\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.719 - 0.747]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1672  230]\n",
            " [ 366  523]]\n",
            "Precision is 0.7574836408373702 \n",
            "Recall is 0.7336880602858397 \n",
            "Fscore is 0.7428794895416633 \n",
            "Support is None \n",
            "AUC is 0.7336880602858397\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:SumEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11', 'preThrombolysisPressure']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11', 'preThrombolysisPressure']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.7594006061553955 minutes\n",
            "Best: 0.773472 using {'max_depth': 10, 'n_estimators': 50}\n",
            "0.773168 (0.004129) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.773472 (0.004502) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.768347 (0.008188) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.767284 (0.008751) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.760627 (0.007159) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.764378 (0.006941) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.8129285  0.67690254] \n",
            "Recall is [0.87276551 0.57030371] \n",
            "Fscore is [0.84178499 0.61904762] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7215346110127402\n",
            "{'max_depth': 10, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 1.294553518295288 minutes\n",
            "Best: 0.774058 using {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.773565 (0.006758) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.774058 (0.005484) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.770304 (0.003410) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.771967 (0.006901) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.771388 (0.005279) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.756632 (0.005596) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "Precision is [0.81470442 0.66323907] \n",
            "Recall is [0.86225026 0.58042745] \n",
            "Fscore is [0.83780332 0.61907618] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7213388547251782\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True], 'max_features': [8], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 1.2501447200775146 minutes\n",
            "Best: 0.774963 using {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.772854 (0.004794) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.773316 (0.003008) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.773868 (0.004151) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.774963 (0.002667) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "Precision is [0.80992141 0.66490066] \n",
            "Recall is [0.86698212 0.56467942] \n",
            "Fscore is [0.83748095 0.6107056 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7158307695765158\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.701 - 0.73]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXAAAAEICAYAAABGaK+TAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAYVklEQVR4nO3de7hcVXnH8e8Pwk1iICHHNBcOwRKLWAXbSGutFaHaKLbQFhFKMdhgpC1trbWK1lZE1GDr7am2isJjVC7SKBLRKmmU4h2DIBKggCExCYGES0LwAkTe/rHWgckwc2afuZw5a/L7PM88Z++1b+/ae887a6+9Z44iAjMzK89u/Q7AzMza4wRuZlYoJ3Azs0I5gZuZFcoJ3MysUE7gZmaFcgI3MyuUE3hFkvaR9EVJ2yT9l6RTJF01yvxXSzp9PGMcjaSPSvrnfsdRhaS1kn6/ybSdjkOPtn+2pM/0Yt0TjaRPSnpE0tp+x1IKSXtJekjSo5LO7WcsA5fAJf2ZpFV5B2+S9N+SfrcLqz4BmAEcEBGvjIiLIuKlXVjvuIiIMyLinVXmzW/qvp6Yo9jpOHS6MklHSdrQeVhFe29EzB0ZyQnqQkkPSrpb0huaLZgbBg/VvB6WtL1m+jRJl0v6qaR1kv6sZtpMScsl3SUpJM1ttI2qlJwn6b78Ok+Smsz71rq4fy7pMUnT8/T3Slqf98E6SW8dWTYiHo6IycBFncTbDQOVwPOJ9kHg3aQ3+TDwH8BxXVj9QcBtEbGjC+saaJIm9XD1bR+HHsfVFz2q09nAPNK+fjHwJkkLGs2YGwaTR17AJUDtldFHgEdI78dTgP+U9Kw87THgK8CfdinuxcDxwOHAc4A/BF7XJO5318V9HnB1RNybZ7kAODQipgC/A5wi6U+6FGf3RMRAvID9gIeAV44yz16kBH9Xfn0Q2CtPOwrYAPwDsBnYBLwmT3sH6SR8NG9jEXAa8M2adb8EuBXYBnwY+F/g9JrpfwHcAjwAfBU4qGZaAGcAtwNbSSe9aqa/Ni+7HbgZ+I1cPgv4HLAFuBP421Hq/kng3Ap1XZzr+Uiu6xdbbYv0hl8GfAZ4EPgX4OfAtJp5ngvcC+wB/CrwNeC+XHYRsH/NvGuB329Qh0bHYTfgbcC6XJdPAfvl+efmfbsI+AlwTd369s1xPpbX91Cu59nAZXld24HVwPya5cay31+ej9l2YCPwxpppxwE35H32Y2BBzfqXA/cDdwCvHWVfn0469y/Ix3EjcC6we8X3zePnRU3ZXcBLa8bfCVxaYV375nq+qGb8EeAZNfN8GlhSt9ykfJzmdpgDvg0srhlfBHy3wnIC1gALm0yfDfwIeFOrfTfer75tuOsVgQXADmDSKPOcA3wXeBowlA/4O/O0o/Ly55CSzMuBnwFT8/Szgc/UrOs0cgIHpucT94S87N/ndZ2epx+X34jPzCfr24Bv16wrgCuB/UlXDVtq3syvzG/K5+UT7RBSy2g34DpSstwTeHo+Cf+gSd0fP9kq1HWnE7PVtvK+eZTU+tkN2IeUoGsTz78CH83Dh5A+8PbKx+Ea4IM1866lQQJvchz+Iu/bpwOTgc8Dn87T5uZ9+ylSMtmnwfqOAjY02MYv8n7ZHXgPORG0sd83AS/Mw1N54sP3SNKH/UvyOmeTWnzk/fEfwN7AEfl8OHqUfX058LFcx6cB1wKvy/MPkxoFw63Oi5oYA5hRU3YC8KMK78FX532hPP5c4Gd187yR3CioKetWAt8G/FbN+Hxge4Xlfo/04T25rvysXB65XnNG23f9eA1SF8oBwL0x+qX1KcA5EbE5IraQWnSn1kx/NE9/NCK+TDp4v1Zh2y8HVkfEsoh4lNSyv7tm+hnAeyLilhzfu4EjJB1UM8+SiNgaET8Bvk5640JqYb03Ir4fyR0RsY6U0Ici4pyIeCQi1gAfB06qEO9Y61plW9+JiC9ExGMR8XPgYuBkSH2Ted6LAXIdVkTqS9wCvB94UcW4650CvD8i1kTEQ8BbgJPquhbOjoif5riq+mZEfDkifklqNR6ey8e63x8FDpM0JSIeiIgf5PJFwIV5PzwWERsj4lZJBwIvAN4cEb+IiBuAT5CS44jH9zUwhXT+vT7XcTPwgZF4IuInEbF/Pq+qmJz/bqsp2wY8tcKyC4FPRc5ueV0P1s1TdV3tmMyT457crB+8xkJgWT5/HhcRS0ix/gbpHNjWYNm+GqQEfh8wvUWf4CzSpfaIdbns8XXUfQD8jCdO6NHMAtaPjOQTeH3N9IOAD0naKmkr6dJYpFbXiNqEX7vdA0mX1/UOAmaNrDOv962kvsYqxlLXKttaX7fM54DnS5pJauE8BnwDQNIMSZdK2ijpQVJ3wPSKcddrdEwntYitivrjsXc+t8a63/+UlGDXSfpfSc/P5c2O6yzg/ojYXlO2jp3Plfpzaw9gU008HyO1xNsxksSm1JRNIV1hNiVpmHQ186m6dU2pm7Xlupqs/5SaG47/3WS2+u1NAR6q+UBptN6nkK5ylzaanhtN15O62t4x1rh7bZBu6nwHeJh0abmsyTx3kU741Xl8OJd1ahPpDQk83uI8sGb6euBdEdHOXev1pD7jRuV3RsS8NtbZSv0JX2VbOy0TEQ/kxyxfReo6urTmjfTuPP+zI+J+SceT7hu0Y+SYjhgmdQ/dA8xpFNtocVcwpv0eEd8HjpO0B3AmqW/9QJof17uAaZKeWpPEh0ndaI1iXk8676e3uPqsJB+3TaQrjhW5+HCeeM80cyrwrXxFMuI2YJKkeRFx+xjW1Siui2j91MfqvP5rx7CtPyY1qK5uMd8kGh+vvhqYFnhEbCP1S35E0vGSniJpD0kvk/TePNslwNskDeXHhf6F1Prr1JeAZ0n6k9xK+1vgV2qmfxR4y8jdd0n7Sar6CNwngDdK+s38mNQhuevlWmC7pDcrPRu9u6Rfl/S8LtTnHlLf7oh2t3Ux6dL/hDw84qmk1tI2SbOBf+wg1kuAv5d0sKTJpA+Hz44hmd0DHCBpv4rzV94XkvbMLcf9ctfag6QrEUg3HV8j6RhJu0maLenQiFhPujfzHkl7S3oOqbul4XkaEZuAq4D3SZqS1/WrktrtkoLUin6bpKmSDiXdRP9ki2VeXT9PRPyUdE/iHEn7SnoB6X7Qp0fmkbQ36V4IwF55vJO435D35SzSTfpWcdd3+5D34ety/SXpSOCvgZUdxNYTA5PAASLifcAbSDcJt5BaJ2cCX8iznAusAm4k3VX+QS7rdLv3ki7DlpC6cuYB36qZfjnpMaVLc5fBTcDLKq77v4B3kRLg9lyXablv9hWkvvI7SU9zfIL0REKnLiD1226V9IUOtrWctC/ujogf1pS/g9SvuI304ff5DmK9kJQQrsmx/QL4m6oLR8StpA+BNbm+s1rMP9Z9cSqwNh/3M0h99kTEtcBrSP3V20hPLY1cSZxMugF7F+kG5dsj4n9GCevVpBuqN5OecloGzITUtZG7HYZHq1edt5O6d9bluP41Ir7SbH25W2gOOz8+OOKvSDdaN5P2819GRG2r+Oc80W1zax5v18eAL5Le2zeRzq2P1cT5kKQX1ozPBo5m526fEX9M2gfbSR+e/55fE4qiefeQmQ04SR8nfWDcExETrotgIpK0F+nKbQ/SAwZ96xt3AjczK9RAdaGYme1KnMDNzAo1ro8RTp8+PebOnTuemzQzK9511113b0QM1ZePawKfO3cuq1atGs9NmpkVT9K6RuXuQjEzK5QTuJlZoZzAzcwK5QRuZlYoJ3Azs0I5gZuZFcoJ3MysUE7gZmaFcgI3MyvUIP1HHrMJbe5ZX2pYvnbJseMciQ0Kt8DNzArlBG5mVih3oZjh7g0rk1vgZmaFcgI3MyuUE7iZWaHcB27WRc360s16wS1wM7NCOYGbmRXKCdzMrFDuAzcbhZ8Pt4nMLXAzs0I5gZuZFcoJ3MysUJX6wCWtBbYDvwR2RMR8SdOAzwJzgbXAiRHxQG/CNDOzemNpgb84Io6IiPl5/CxgZUTMA1bmcTMzGyeddKEcByzNw0uB4zsPx8zMqqqawAO4StJ1khbnshkRsSkP3w3M6Hp0ZmbWVNXnwH83IjZKehqwQtKttRMjIiRFowVzwl8MMDw83FGwZlX1+vlt/+aJTQSVWuARsTH/3QxcDhwJ3CNpJkD+u7nJsudHxPyImD80NNSdqM3MrHUCl7SvpKeODAMvBW4ClgML82wLgSt6FaSZmT1ZlS6UGcDlkkbmvzgiviLp+8BlkhYB64ATexemmZnVa5nAI2INcHiD8vuAY3oRlJmZteZvYpqZFcoJ3MysUE7gZmaFcgI3MyuUE7iZWaGcwM3MCuUEbmZWKCdwM7NCOYGbmRXKCdzMrFBVf07WrK96/fOwZiVyC9zMrFBO4GZmhXIXiu1S/J90bJC4BW5mVigncDOzQjmBm5kVyn3gNqG4j9qsOrfAzcwK5QRuZlYoJ3Azs0I5gZuZFcoJ3MysUE7gZmaFcgI3MyuUnwO3vvDz3madcwvczKxQTuBmZoVyF4oVzV0xtiur3AKXtLuk6yVdmccPlvQ9SXdI+qykPXsXppmZ1RtLF8rfAbfUjJ8HfCAiDgEeABZ1MzAzMxtdpQQuaQ5wLPCJPC7gaGBZnmUpcHwvAjQzs8aqtsA/CLwJeCyPHwBsjYgdeXwDMLvRgpIWS1oladWWLVs6CtbMzJ7QMoFLegWwOSKua2cDEXF+RMyPiPlDQ0PtrMLMzBqo8hTKC4A/kvRyYG9gCvAhYH9Jk3IrfA6wsXdhmplZvZYt8Ih4S0TMiYi5wEnA1yLiFODrwAl5toXAFT2L0szMnqST58DfDFwq6VzgeuCC7oRkg8TPaZv1zpgSeERcDVydh9cAR3Y/JDMzq8JfpTczK5QTuJlZoZzAzcwK5QRuZlYoJ3Azs0I5gZuZFcoJ3MysUE7gZmaFcgI3MyuU/6Wa2QTV7GcI1i45dpwjsYnKLXAzs0I5gZuZFcoJ3MysUO4DN+sz/+SutcstcDOzQjmBm5kVygnczKxQTuBmZoVyAjczK5QTuJlZoZzAzcwK5QRuZlYoJ3Azs0I5gZuZFcoJ3MysUE7gZmaFcgI3MyuUE7iZWaH8c7JmA87/mm1wtWyBS9pb0rWSfihptaR35PKDJX1P0h2SPitpz96Ha2ZmI6p0oTwMHB0RhwNHAAsk/TZwHvCBiDgEeABY1LswzcysXssEHslDeXSP/ArgaGBZLl8KHN+TCM3MrKFKNzEl7S7pBmAzsAL4MbA1InbkWTYAs5ssu1jSKkmrtmzZ0o2YzcyMigk8In4ZEUcAc4AjgUOrbiAizo+I+RExf2hoqM0wzcys3pgeI4yIrcDXgecD+0saeYplDrCxy7GZmdkoqjyFMiRp/zy8D/AS4BZSIj8hz7YQuKJXQZqZ2ZNVeQ58JrBU0u6khH9ZRFwp6WbgUknnAtcDF/QwTjMzq9MygUfEjcBzG5SvIfWHm5lZH/ir9GZmhfJX6a2yZl/JBn8t26wf3AI3MyuUE7iZWaGcwM3MCuUEbmZWKCdwM7NCOYGbmRXKCdzMrFB+Dty6YrRnxM2sN9wCNzMrlBO4mVmhnMDNzArlPnB7Evdnl8nHbdfjFriZWaGcwM3MCuUuFLPCuKvERrgFbmZWKCdwM7NCOYGbmRXKCdzMrFBO4GZmhXICNzMrlBO4mVmhnMDNzArlBG5mVigncDOzQjmBm5kVqmUCl3SgpK9LulnSakl/l8unSVoh6fb8d2rvwzUzsxFVWuA7gH+IiMOA3wb+WtJhwFnAyoiYB6zM42ZmNk5aJvCI2BQRP8jD24FbgNnAccDSPNtS4PheBWlmZk82pp+TlTQXeC7wPWBGRGzKk+4GZjRZZjGwGGB4eLjdOM2sy8b6s7Rrlxzbo0isXZVvYkqaDHwOeH1EPFg7LSICiEbLRcT5ETE/IuYPDQ11FKyZmT2hUgKXtAcpeV8UEZ/PxfdImpmnzwQ29yZEMzNrpMpTKAIuAG6JiPfXTFoOLMzDC4Eruh+emZk1U6UP/AXAqcCPJN2Qy94KLAEuk7QIWAec2JsQzcyskZYJPCK+CajJ5GO6G46ZmVXlb2KamRXKCdzMrFBO4GZmhXICNzMrlBO4mVmhnMDNzAo1pt9CscEy1t/CMLOJxS1wM7NCOYGbmRXKCdzMrFDuAx8gzfq0/TvO1ks+7/rHLXAzs0I5gZuZFcpdKGZWiR87nXjcAjczK5QTuJlZoZzAzcwK5QRuZlYoJ3Azs0I5gZuZFcoJ3MysUH4OfBfg53fNBpNb4GZmhXICNzMrlBO4mVmhnMDNzArlBG5mVigncDOzQjmBm5kVqmUCl3ShpM2SbqopmyZphaTb89+pvQ3TzMzqVWmBfxJYUFd2FrAyIuYBK/O4mZmNo5YJPCKuAe6vKz4OWJqHlwLHdzkuMzNrod2v0s+IiE15+G5gRrMZJS0GFgMMDw+3ubldk//bt5VstJ9w8DncHR3fxIyIAGKU6edHxPyImD80NNTp5szMLGs3gd8jaSZA/ru5eyGZmVkV7Sbw5cDCPLwQuKI74ZiZWVUt+8AlXQIcBUyXtAF4O7AEuEzSImAdcGIvg7Sd+edhzQwqJPCIOLnJpGO6HIuZmY2Bv4lpZlYoJ3Azs0L5X6qZ2bgb630cPzfemFvgZmaFcgI3MyuUE7iZWaGcwM3MCuUEbmZWKCdwM7NC+THCHvDPwJrZeHAL3MysUE7gZmaFcgI3MyuU+8DHkfvGzayb3AI3MyuUE7iZWaGcwM3MCuU+8A5061+b+V+kmbVnV/9ZWrfAzcwK5QRuZlYoJ3Azs0I5gZuZFcoJ3MysUE7gZmaFKuYxQn8N3WzX1etHdkvNI26Bm5kVygnczKxQTuBmZoUqpg+8W8baB+avuZsNvm71jY93H3tHLXBJCyT9n6Q7JJ3VraDMzKy1thO4pN2BjwAvAw4DTpZ0WLcCMzOz0XXSAj8SuCMi1kTEI8ClwHHdCcvMzFpRRLS3oHQCsCAiTs/jpwK/FRFn1s23GFicR38N+L/2w+2K6cC9fY6h2waxTjCY9RrEOoHr1WsHRcRQfWHPb2JGxPnA+b3eTlWSVkXE/H7H0U2DWCcYzHoNYp3A9eqXTrpQNgIH1ozPyWVmZjYOOkng3wfmSTpY0p7AScDy7oRlZmattN2FEhE7JJ0JfBXYHbgwIlZ3LbLemTDdOV00iHWCwazXINYJXK++aPsmppmZ9Ze/Sm9mVigncDOzQg1MAq/ytX5JJ0q6WdJqSRfXlJ8n6ab8etX4Rd1aq3pJ+oCkG/LrNklba6YtlHR7fi0c38ib67BOX5G0VdKV4xt1a+3WS9IRkr6Tz8sbB+UclHSQpB/k8tWSzhj/6Bvr5BzM06dI2iDpw+MXdQMRUfyLdBP1x8DTgT2BHwKH1c0zD7gemJrHn5b/HgusIN3Q3Zf0dM2Uftepar3q5v8b0s1kgGnAmvx3ah6eWnKd8vgxwB8CV/a7Ll08Vs8A5uXhWcAmYP9+16kL9doT2CsPTwbWArNKrlNN2YeAi4EP97Mug9ICr/K1/tcCH4mIBwAiYnMuPwy4JiJ2RMRPgRuBBeMUdytj/bmCk4FL8vAfACsi4v5c5xVMjHp1UiciYiWwvbchtqXtekXEbRFxex6+C9gMPOlbd33SSb0eiYiHc/leTJwr/o7OQUm/CcwArupplBVMlB3aqdnA+prxDbms1jOAZ0j6lqTvShpJZj8EFkh6iqTpwIvZ+QtK/VSlXkC6XAUOBr421mXHWSd1msi6Ui9JR5JahT/uQYzt6Khekg6UdGNex3n5A6rf2q6TpN2A9wFv7HGMlexKvwc+idSNchTpW6PXSHp2RFwl6XnAt4EtwHeAX/YtyvadBCyLiBJjb2YQ6wRN6iVpJvBpYGFEPNaXyDrzpHpFxHrgOZJmAV+QtCwi7ulbhGNXX6e/Ar4cERsk9TGsZFBa4FW+1r8BWB4Rj0bEncBtpIRORLwrIo6IiJcAytMmgrH8XMFJ1FzmjXHZ8dRJnSayjuolaQrwJeCfIuK7PYmwPV05XrnlfRPwwq5G155O6vR84ExJa4F/A14taUkvgqyk3zcUuvEita7XkC51Rm5KPKtungXA0jw8nXQJdQDphsYBufw5pJNsUr/rVLVeeb5DSTeIVFM2DbiTdANzah6eVnKdaqYdxcS7idnJsdoTWAm8vt/16HK95gD75OGppIbRs0uuU9300+jzTcyB6EKJJl/rl3QOsCoiludpL5V0M6mL5B8j4j5JewPfyJdDDwJ/HhE7+lOTnVWsF6RWwqWRz6q87P2S3kl6qgbgnIi4fzzjb6STOgFI+gbpjTVZ0gZgUUR8dRyr0FCH9ToR+D3gAEmn5bLTIuKGcQq/qQ7r9UzgfZKCdGX7bxHxo/GMv5FOz8GJxF+lNzMr1KD0gZuZ7XKcwM3MCuUEbmZWKCdwM7NCOYGbmRXKCdzMrFBO4GZmhfp/J6Fjh276n7QAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1649  253]\n",
            " [ 387  502]]\n",
            "Precision is 0.737411038394983 \n",
            "Recall is 0.7158307695765158 \n",
            "Fscore is 0.7240932754532233 \n",
            "Support is None \n",
            "AUC is 0.7158307695765158\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:WOEEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.4407672882080078 minutes\n",
            "Best: 0.771488 using {'max_depth': 10, 'n_estimators': 50}\n",
            "0.769414 (0.003445) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.771488 (0.005604) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.761311 (0.003835) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.760137 (0.005288) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.751128 (0.002124) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.756726 (0.004610) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81546745 0.68449198] \n",
            "Recall is [0.87592008 0.57592801] \n",
            "Fscore is [0.84461343 0.62553451] \n",
            "Support is [1902  889] \n",
            "AUC is 0.725924046560426\n",
            "{'max_depth': 10, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.5942416191101074 minutes\n",
            "Best: 0.770312 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.770312 (0.002357) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.767340 (0.004474) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.766241 (0.004763) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.770165 (0.005086) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.766047 (0.005157) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.755749 (0.006414) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "Precision is [0.81751107 0.68337731] \n",
            "Recall is [0.87381703 0.58267717] \n",
            "Fscore is [0.84472681 0.62902247] \n",
            "Support is [1902  889] \n",
            "AUC is 0.728247100027323\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.5586097240447998 minutes\n",
            "Best: 0.771455 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.770891 (0.002737) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.770025 (0.002595) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.771455 (0.004413) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.768972 (0.004849) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "Precision is [0.81635651 0.68624833] \n",
            "Recall is [0.87644585 0.57817773] \n",
            "Fscore is [0.84533469 0.62759463] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7273117871307095\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.713 - 0.741]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1667  235]\n",
            " [ 375  514]]\n",
            "Precision is 0.7513024221652376 \n",
            "Recall is 0.7273117871307095 \n",
            "Fscore is 0.7364646565965025 \n",
            "Support is None \n",
            "AUC is 0.7273117871307095\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@   ScoreFunction:<function f_regression at 0x7fbddfd410e0>   @@@@@@@@@@@@@@@@@@@@@\n",
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:HelmertEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.30249643325805664 minutes\n",
            "Best: 0.771681 using {'max_depth': 10, 'n_estimators': 30}\n",
            "0.771681 (0.005566) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.771348 (0.005436) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.760568 (0.005029) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.757679 (0.003228) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.749522 (0.004572) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.755295 (0.004134) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81742126 0.68247694] \n",
            "Recall is [0.87329127 0.58267717] \n",
            "Fscore is [0.84443315 0.62864078] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7279842188496154\n",
            "{'max_depth': 10, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.3470606803894043 minutes\n",
            "Best: 0.770819 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.770819 (0.005526) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.767197 (0.001707) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.767973 (0.005955) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "0.767387 (0.004790) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.766389 (0.003791) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.755343 (0.007101) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "Precision is [0.81527094 0.67542707] \n",
            "Recall is [0.8701367  0.57817773] \n",
            "Fscore is [0.84181078 0.6230303 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7241572129982176\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.3373689651489258 minutes\n",
            "Best: 0.772061 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.770325 (0.003414) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.772061 (0.004273) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.771524 (0.003651) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.770940 (0.003751) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "Precision is [0.81818182 0.68650794] \n",
            "Recall is [0.87539432 0.58380202] \n",
            "Fscore is [0.84582169 0.63100304] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7295981732567342\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.715 - 0.744]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1665  237]\n",
            " [ 370  519]]\n",
            "Precision is 0.7523448773448773 \n",
            "Recall is 0.729598173256734 \n",
            "Fscore is 0.7384123655785306 \n",
            "Support is None \n",
            "AUC is 0.7295981732567342\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:OrdinalEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.26969289779663086 minutes\n",
            "Best: 0.771153 using {'max_depth': 10, 'n_estimators': 30}\n",
            "0.771153 (0.001330) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.769751 (0.002876) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.759598 (0.004415) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.759014 (0.003163) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.753604 (0.002396) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.755621 (0.002618) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81706114 0.67889908] \n",
            "Recall is [0.87118822 0.58267717] \n",
            "Fscore is [0.843257   0.62711864] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7269326941387847\n",
            "{'max_depth': 10, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.3611156940460205 minutes\n",
            "Best: 0.768440 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.768440 (0.004252) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.768235 (0.004877) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.765832 (0.005331) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "0.766959 (0.004473) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.766004 (0.006194) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.754975 (0.007493) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "Precision is [0.81692232 0.67402597] \n",
            "Recall is [0.86803365 0.58380202] \n",
            "Fscore is [0.84170278 0.62567812] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7259178367688266\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.3465158939361572 minutes\n",
            "Best: 0.770799 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.768526 (0.002560) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.768457 (0.007179) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.770556 (0.004213) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.770799 (0.001170) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "Precision is [0.81769042 0.68518519] \n",
            "Recall is [0.87486856 0.58267717] \n",
            "Fscore is [0.84531369 0.62978723] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7287728623827383\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.714 - 0.743]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1664  238]\n",
            " [ 371  518]]\n",
            "Precision is 0.7514378014378015 \n",
            "Recall is 0.7287728623827384 \n",
            "Fscore is 0.7375504623349672 \n",
            "Support is None \n",
            "AUC is 0.7287728623827383\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:SumEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.30231618881225586 minutes\n",
            "Best: 0.770768 using {'max_depth': 10, 'n_estimators': 30}\n",
            "0.770768 (0.006169) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.768667 (0.004023) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.758980 (0.001180) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.759684 (0.004106) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.751840 (0.000823) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.752302 (0.002706) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81692913 0.68115942] \n",
            "Recall is [0.87276551 0.58155231] \n",
            "Fscore is [0.84392476 0.62742718] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7271589079756199\n",
            "{'max_depth': 10, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.45302557945251465 minutes\n",
            "Best: 0.769983 using {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.768010 (0.006293) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.767396 (0.003290) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.764940 (0.002016) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "0.769983 (0.006440) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.765035 (0.005135) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.755949 (0.006832) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "Precision is [0.8133268  0.67733333] \n",
            "Recall is [0.87276551 0.57142857] \n",
            "Fscore is [0.84199848 0.61989018] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7220970407090281\n",
            "{'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [False], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.44573163986206055 minutes\n",
            "Best: 0.770598 using {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.769856 (0.004991) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.770598 (0.002514) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.769931 (0.005672) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.769578 (0.003771) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "Precision is [0.82100592 0.68938401] \n",
            "Recall is [0.87539432 0.59167604] \n",
            "Fscore is [0.84732824 0.63680387] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7335351811307498\n",
            "{'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.719 - 0.748]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1665  237]\n",
            " [ 363  526]]\n",
            "Precision is 0.7551949638223456 \n",
            "Recall is 0.7335351811307498 \n",
            "Fscore is 0.7420660591834094 \n",
            "Support is None \n",
            "AUC is 0.7335351811307498\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:WOEEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS3', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS8', 'NIHSS9', 'NIHSS10', 'NIHSS11']\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.27200794219970703 minutes\n",
            "Best: 0.770615 using {'max_depth': 10, 'n_estimators': 30}\n",
            "0.770615 (0.001977) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.769370 (0.003335) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.762476 (0.002140) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.762228 (0.004493) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.750669 (0.001640) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.751853 (0.004018) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81724645 0.688     ] \n",
            "Recall is [0.87697161 0.58042745] \n",
            "Fscore is [0.8460563  0.62965223] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7286995277009931\n",
            "{'max_depth': 10, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.3652331829071045 minutes\n",
            "Best: 0.769870 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.769870 (0.001946) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.768095 (0.004335) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.765852 (0.004583) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "0.767015 (0.004230) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "0.767035 (0.005777) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 30}\n",
            "0.755804 (0.006700) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 30}\n",
            "Precision is [0.81483301 0.6781457 ] \n",
            "Recall is [0.87223975 0.57592801] \n",
            "Fscore is [0.84255967 0.62287105] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7240838783164724\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 30}\n",
            "current grid used is: \n",
            "{'n_estimators': [30], 'max_depth': [10], 'bootstrap': [True], 'max_features': [5], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.348538875579834 minutes\n",
            "Best: 0.771389 using {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.769970 (0.002741) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.771389 (0.002718) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "0.771139 (0.004609) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 30}\n",
            "0.769589 (0.005506) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 30}\n",
            "Precision is [0.81961557 0.68635171] \n",
            "Recall is [0.8743428  0.58830146] \n",
            "Fscore is [0.84609514 0.63355542] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7313221296864706\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 30}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.717 - 0.745]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1663  239]\n",
            " [ 366  523]]\n",
            "Precision is 0.7529836401056078 \n",
            "Recall is 0.7313221296864706 \n",
            "Fscore is 0.7398252810712223 \n",
            "Support is None \n",
            "AUC is 0.7313221296864706\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'\\nw/o resample \\n\\n Enc:WOEEncoder + rf + f_regression\\nPrecision is 0.754037598729604 \\nRecall is 0.7040906524839553 \\nFscore is 0.7209070584477802 \\nSupport is None \\nAUC is 0.7040906524839554\\n\\n\\nw/ resample\\nlr + Enc:OrdinalEncoder + f_classif\\nPrecision is 0.7240856738735097 \\nRecall is 0.7491921945566913 \\nFscore is 0.7333033718496091 \\nSupport is None \\nAUC is 0.7491921945566912\\n[[972 230]\\n [139 309]]\\n'"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3Nx0lDbDoVrL"
      },
      "source": [
        "# Run all tmp"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "0HrTpb37oA_Y",
        "outputId": "4bb7d70c-7c23-43b6-e26e-ad5e7a307849"
      },
      "source": [
        "import category_encoders as ce\n",
        "\n",
        "\n",
        "saveFile = False\n",
        "debugMode = False\n",
        "models = ['lr']\n",
        "\n",
        "# select encoding type\n",
        "encs = [\n",
        "      'BackwardDifferenceEncoder',\n",
        "      # ce.BinaryEncoder(),\n",
        "      # ce.CatBoostEncoder(),\n",
        "      # ce.GLMMEncoder(),\n",
        "      # ce.HashingEncoder(),\n",
        "      'HelmertEncoder',\n",
        "      # ce.JamesSteinEncoder(),\n",
        "      # ce.LeaveOneOutEncoder(),\n",
        "      # ce.MEstimateEncoder(),\n",
        "      # ce.OneHotEncoder(),\n",
        "      'OrdinalEncoder',\n",
        "      'SumEncoder',\n",
        "      # ce.PolynomialEncoder(),\n",
        "      # ce.TargetEncoder(),\n",
        "      'WOEEncoder'\n",
        "]\n",
        "\n",
        "# select score function for feature selection\n",
        "scoreFunctions=[\n",
        "      'f_classif',    #(0.791)\n",
        "      'mutual_info_classif', #(~0.798 * 5)\n",
        "      # 'chi2',  #(~0.776 * 5)\n",
        "      'f_regression', #(~0.792 * 5)\n",
        "      # 'mutual_info_regression' #(0.78*3， 0.793*2) \n",
        "]\n",
        "\n",
        "auc = runAll(models, encs=encs, scoreFunctions=scoreFunctions)\n",
        "\n",
        "print(\"^^^^^^final AUC is ^^^^^^^^^^^^^\")\n",
        "print(auc)\n",
        "\n",
        "\"\"\"\n",
        "w/o resample \n",
        "\n",
        " Enc:WOEEncoder + rf + f_regression\n",
        "Precision is 0.754037598729604 \n",
        "Recall is 0.7040906524839553 \n",
        "Fscore is 0.7209070584477802 \n",
        "Support is None \n",
        "AUC is 0.7040906524839554\n",
        "\n",
        "\n",
        "w/ resample\n",
        "lr + Enc:OrdinalEncoder + f_classif\n",
        "Precision is 0.7240856738735097 \n",
        "Recall is 0.7491921945566913 \n",
        "Fscore is 0.7333033718496091 \n",
        "Support is None \n",
        "AUC is 0.7491921945566912\n",
        "[[972 230]\n",
        " [139 309]]\n",
        "\"\"\""
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@   ScoreFunction:<function f_classif at 0x7fbddfd3cd40>   @@@@@@@@@@@@@@@@@@@@@\n",
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:BackwardDifferenceEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.0530850887298584 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05072307586669922 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:HelmertEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.051587581634521484 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.056151390075683594 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:OrdinalEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.057845115661621094 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.057144880294799805 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:SumEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05208730697631836 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.0519254207611084 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:WOEEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.052289485931396484 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05529046058654785 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@   ScoreFunction:<function mutual_info_classif at 0x7fbddf896560>   @@@@@@@@@@@@@@@@@@@@@\n",
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:BackwardDifferenceEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.053395986557006836 minutes\n",
            "Best: 0.754449 using {'C': 0.1, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.741818 (0.006502) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.754214 (0.006218) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.754449 (0.006007) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79310345 0.68992248] \n",
            "Recall is [0.89484753 0.50056243] \n",
            "Fscore is [0.84090909 0.58018253] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6977049793066087\n",
            "{'C': 0.1, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.02328365  0.25498569  0.04231677  0.72627167  0.34406778  0.2754584\n",
            "   0.00758381 -0.05775973  0.13410966  0.11201799]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.1], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05485367774963379 minutes\n",
            "Best: 0.754449 using {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.754449 (0.006007) with: {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79310345 0.68992248] \n",
            "Recall is [0.89484753 0.50056243] \n",
            "Fscore is [0.84090909 0.58018253] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6977049793066087\n",
            "{'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.02328365  0.25498569  0.04231677  0.72627167  0.34406778  0.2754584\n",
            "   0.00758381 -0.05775973  0.13410966  0.11201799]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.712]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1702  200]\n",
            " [ 444  445]]\n",
            "Precision is 0.7415129644480085 \n",
            "Recall is 0.6977049793066088 \n",
            "Fscore is 0.7105458101220812 \n",
            "Support is None \n",
            "AUC is 0.6977049793066087\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:HelmertEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9']\n",
            "Index(['atrialFibrillation'], dtype='object')\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['atrialFibrillation', 'NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.07989835739135742 minutes\n",
            "Best: 0.732494 using {'C': 0.1, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.552657 (0.000233) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.684944 (0.006756) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.732494 (0.006073) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.77450529 0.64563107] \n",
            "Recall is [0.88485804 0.4488189 ] \n",
            "Fscore is [0.82601227 0.52952887] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6668384709009166\n",
            "{'C': 0.1, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-1.31362705e-03  3.53068877e-01  1.54195793e+00  1.31910792e+00\n",
            "   1.51607976e+00  2.40938829e+00  1.38637026e+00  1.11709405e+00\n",
            "   7.09068443e-01  3.64253626e-01  7.04435490e-01]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.1], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.08296418190002441 minutes\n",
            "Best: 0.732494 using {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.732494 (0.006073) with: {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.77450529 0.64563107] \n",
            "Recall is [0.88485804 0.4488189 ] \n",
            "Fscore is [0.82601227 0.52952887] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6668384709009166\n",
            "{'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-1.31362705e-03  3.53068877e-01  1.54195793e+00  1.31910792e+00\n",
            "   1.51607976e+00  2.40938829e+00  1.38637026e+00  1.11709405e+00\n",
            "   7.09068443e-01  3.64253626e-01  7.04435490e-01]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.651 - 0.681]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1683  219]\n",
            " [ 490  399]]\n",
            "Precision is 0.7100681800919493 \n",
            "Recall is 0.6668384709009165 \n",
            "Fscore is 0.6777705676169695 \n",
            "Support is None \n",
            "AUC is 0.6668384709009166\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:OrdinalEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.061907291412353516 minutes\n",
            "Best: 0.756503 using {'C': 0.1, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.743638 (0.005793) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.756134 (0.005098) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.756503 (0.004352) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.7958042  0.69814241] \n",
            "Recall is [0.89747634 0.50731159] \n",
            "Fscore is [0.84358784 0.58762215] \n",
            "Support is [1902  889] \n",
            "AUC is 0.702393963372875\n",
            "{'C': 0.1, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.01622658  0.27073489  0.04741268  0.70036699  0.17295882  0.3283688\n",
            "   0.26820914  0.0073568  -0.06066794  0.12875922]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.1], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.07160711288452148 minutes\n",
            "Best: 0.756503 using {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.756503 (0.004352) with: {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.7958042  0.69814241] \n",
            "Recall is [0.89747634 0.50731159] \n",
            "Fscore is [0.84358784 0.58762215] \n",
            "Support is [1902  889] \n",
            "AUC is 0.702393963372875\n",
            "{'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.01622658  0.27073489  0.04741268  0.70036699  0.17295882  0.3283688\n",
            "   0.26820914  0.0073568  -0.06066794  0.12875922]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.688 - 0.717]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1707  195]\n",
            " [ 438  451]]\n",
            "Precision is 0.7469733053324384 \n",
            "Recall is 0.7023939633728749 \n",
            "Fscore is 0.7156049963418433 \n",
            "Support is None \n",
            "AUC is 0.702393963372875\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:SumEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.062355995178222656 minutes\n",
            "Best: 0.756503 using {'C': 0.1, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.743638 (0.005793) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.756134 (0.005098) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.756503 (0.004352) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.7958042  0.69814241] \n",
            "Recall is [0.89747634 0.50731159] \n",
            "Fscore is [0.84358784 0.58762215] \n",
            "Support is [1902  889] \n",
            "AUC is 0.702393963372875\n",
            "{'C': 0.1, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.01622658  0.27073489  0.04741268  0.70036699  0.17295882  0.3283688\n",
            "   0.26820914  0.0073568  -0.06066794  0.12875922]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.1], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.06703543663024902 minutes\n",
            "Best: 0.756503 using {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.756503 (0.004352) with: {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.7958042  0.69814241] \n",
            "Recall is [0.89747634 0.50731159] \n",
            "Fscore is [0.84358784 0.58762215] \n",
            "Support is [1902  889] \n",
            "AUC is 0.702393963372875\n",
            "{'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.01622658  0.27073489  0.04741268  0.70036699  0.17295882  0.3283688\n",
            "   0.26820914  0.0073568  -0.06066794  0.12875922]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.688 - 0.717]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1707  195]\n",
            " [ 438  451]]\n",
            "Precision is 0.7469733053324384 \n",
            "Recall is 0.7023939633728749 \n",
            "Fscore is 0.7156049963418433 \n",
            "Support is None \n",
            "AUC is 0.702393963372875\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:WOEEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS6b', 'NIHSS9']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.06343603134155273 minutes\n",
            "Best: 0.756503 using {'C': 0.1, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.743638 (0.005793) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.756134 (0.005098) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.756503 (0.004352) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.7958042  0.69814241] \n",
            "Recall is [0.89747634 0.50731159] \n",
            "Fscore is [0.84358784 0.58762215] \n",
            "Support is [1902  889] \n",
            "AUC is 0.702393963372875\n",
            "{'C': 0.1, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.01622658  0.27073489  0.04741268  0.70036699  0.17295882  0.3283688\n",
            "   0.26820914  0.0073568  -0.06066794  0.12875922]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.1], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.09626483917236328 minutes\n",
            "Best: 0.756503 using {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.756503 (0.004352) with: {'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.7958042  0.69814241] \n",
            "Recall is [0.89747634 0.50731159] \n",
            "Fscore is [0.84358784 0.58762215] \n",
            "Support is [1902  889] \n",
            "AUC is 0.702393963372875\n",
            "{'C': 0.1, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.01622658  0.27073489  0.04741268  0.70036699  0.17295882  0.3283688\n",
            "   0.26820914  0.0073568  -0.06066794  0.12875922]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.688 - 0.717]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1707  195]\n",
            " [ 438  451]]\n",
            "Precision is 0.7469733053324384 \n",
            "Recall is 0.7023939633728749 \n",
            "Fscore is 0.7156049963418433 \n",
            "Support is None \n",
            "AUC is 0.702393963372875\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@   ScoreFunction:<function f_regression at 0x7fbddfd410e0>   @@@@@@@@@@@@@@@@@@@@@\n",
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:BackwardDifferenceEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05110430717468262 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05395317077636719 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:HelmertEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05080819129943848 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.057248830795288086 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:OrdinalEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.0523076057434082 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05246782302856445 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYoAAAEWCAYAAAB42tAoAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3dd3hUZfbA8e8BFRQBFTtFUBAFRZAIYkEUQZqAC9IERVex/OzddXd1XXtd3cWCZXUTBRUTig0LzQqCBSlSRIFQpEiVmuT8/jg3ZohhMkBm7szkfJ5nnky5c+fMTTJn7lvOK6qKc845tyMVwg7AOedccvNE4ZxzLipPFM4556LyROGccy4qTxTOOeei8kThnHMuKk8UbqeIyAwRaRN2HMlCRP4iIi+E9Novi8i9Ybx2WRORC0Tkg118rv9NxpknihQmIj+LyCYR2SAiy4IPjn3j+Zqq2lhVx8fzNQqJSCUReUBEFgbvc66I3CIikojXLyGeNiKSG3mfqt6vqpfG6fVERK4Vkeki8puI5IrImyJyfDxeb1eJyN0ikrU7+1DVV1W1fQyv9YfkmMi/yfLKE0XqO1dV9wWaAs2AO0KOZ6eJyB47eOhNoC3QCagKDAAGAU/GIQYRkWT7f3gSuA64FjgAOBoYAXQu6xeK8juIuzBf28VIVf2SohfgZ+DsiNsPA+9E3D4Z+BxYA3wHtIl47ADgv8ASYDUwIuKxLsC3wfM+B5oUf03gcGATcEDEY82AlcCewe1LgFnB/scAR0Rsq8D/AXOBn0p4b22BzUDtYve3BPKB+sHt8cADwGRgHTCyWEzRjsF44D7gs+C91AcuDmJeD8wHLg+2rRJsUwBsCC6HA3cDWcE2dYP3dRGwMDgWd0a83t7AK8HxmAXcCuTu4HfbIHifLaL8/l8GBgPvBPFOAo6KePxJYFFwXKYCp0c8djcwHMgKHr8UaAF8ERyrpcB/gL0intMY+BD4FfgF+AvQAdgKbAuOyXfBttWBF4P9LAbuBSoGjw0MjvkTwKrgsYHAp8HjEjy2PIjte+A47EvCtuD1NgCji/8fABWDuH4MjslUiv0N+WUXPmvCDsAvu/HL2/4fpFbwD/VkcLtm8E/YCTtzbBfcPih4/B3gdWB/YE/gjOD+ZsE/aMvgn+6i4HUqlfCaY4HLIuJ5BHg2uN4NmAccC+wB/BX4PGJbDT50DgD2LuG9PQhM2MH7XkDRB/j44IPoOOzD/C2KPrhLOwbjsQ/0xkGMe2Lf1o8KPqzOADYCJwbbt6HYBzslJ4rnsaRwArAFODbyPQXHvBYwrfj+IvZ7BbCglN//y8H7aRHE/yowLOLx/kCN4LGbgGVA5Yi4twHdg2OzN9AcS6x7BO9lFnB9sH1V7EP/JqBycLtl8WMQ8do5wHPB7+RgLJEX/s4GAnnANcFr7c32ieIc7AN+v+D3cCxwWMR7vjfK/8Et2P9Bw+C5JwA1wv5fTfVL6AH4ZTd+efYPsgH75qTAx8B+wWO3AZnFth+DffAfhn0z3r+EfT4D/LPYfbMpSiSR/5SXAmOD64J9e20d3H4P+HPEPipgH7pHBLcVOCvKe3sh8kOv2GNfEnxTxz7sH4x4rBH2jbNitGMQ8dx7SjnGI4DrguttiC1R1Ip4fDLQJ7g+Hzgn4rFLi+8v4rE7gS9Lie1l4IWI252AH6Jsvxo4ISLuiaXs/3ogJ7jeF/hmB9v9fgyC24dgCXLviPv6AuOC6wOBhcX2MZCiRHEWMAdLWhVKeM/REsVsoFs8/t/K8yXZ2mTdzuuuqlWxD7FjgAOD+48AzheRNYUX4DQsSdQGflXV1SXs7wjgpmLPq401sxT3FtBKRA4DWmPJ55OI/TwZsY9fsWRSM+L5i6K8r5VBrCU5LHi8pP0swM4MDiT6MSgxBhHpKCJfisivwfadKDqmsVoWcX0jUDjA4PBirxft/a9ix+8/ltdCRG4WkVkisjZ4L9XZ/r0Uf+9Hi8jbwcCIdcD9EdvXxppzYnEE9jtYGnHcn8POLEp87UiqOhZr9hoMLBeRISJSLcbX3pk4XYw8UaQJVZ2Afdt6NLhrEfZter+ISxVVfTB47AAR2a+EXS0C7iv2vH1UdWgJr7ka+ADoDfTDzgA0Yj+XF9vP3qr6eeQuorylj4CWIlI78k4RaYl9GIyNuDtymzpYk8rKUo7BH2IQkUpY8nsUOERV9wPexRJcafHGYinW5FRS3MV9DNQSkYxdeSEROR3rA+mFnTnuB6yl6L3AH9/PM8APQANVrYa19Rduvwg4cgcvV3w/i7AzigMjjns1VW0c5Tnb71D1KVVtjp0hHo01KZX6vOC1jyplG7eTPFGkl38B7UTkBKyT8lwROUdEKopI5WB4Zy1VXYo1DT0tIvuLyJ4i0jrYx/PAFSLSMhgJVEVEOotI1R285mvAhUDP4HqhZ4E7RKQxgIhUF5HzY30jqvoR9mH5log0Dt7DycH7ekZV50Zs3l9EGonIPsA9wHBVzY92DHbwsnsBlYAVQJ6IdAQih2z+AtQQkeqxvo9i3sCOyf4iUhO4ekcbBu/vaWBoEPNeQfx9ROT2GF6rKtYPsALYQ0T+DpT2rbwq1nm8QUSOAa6MeOxt4DARuT4Ytlw1SNpgx6Vu4aix4O/rA+AxEakmIhVE5CgROSOGuBGRk4K/vz2B37BBDQURr7WjhAXWZPlPEWkQ/P02EZEasbyu2zFPFGlEVVcA/wP+rqqLsA7lv2AfFouwb2WFv/MB2DfvH7DO6+uDfUwBLsNO/VdjHdIDo7zsKGyEzjJV/S4ilhzgIWBY0IwxHei4k2+pBzAOeB/ri8nCRtJcU2y7TOxsahnW0XptEENpx2A7qro+eO4b2HvvF7y/wsd/AIYC84MmlZKa46K5B8gFfsLOmIZj37x35FqKmmDWYE0q5wGjY3itMdhxm4M1x20melMXwM3Ye16PfWF4vfCB4Ni0A87FjvNc4Mzg4TeDn6tE5Ovg+oVY4p2JHcvhxNaUBpbQng+etwBrhnskeOxFoFFw/EeU8NzHsd/fB1jSexHrLHe7QYpaCpxLPSIyHutIDWV29O4QkSuxju6Yvmk7FxY/o3AuQUTkMBE5NWiKaYgNNc0JOy7nShO3RCEiL4nIchGZvoPHRUSeEpF5IjJNRE6MVyzOJYm9sNE/67HO+JFYP4RzSS1uTU9B5+gG4H+qelwJj3fC2po7YZO7nlTVlsW3c845F664nVGo6kRs7PyOdMOSiKrql8B+wXh855xzSSTMYlw12X4URm5w39LiG4rIIKzOC1WqVGl+zDHHJCRA55xLVb/9BqtWQZWVC6ima5hG3kpVPWhX9pUSVRtVdQgwBCAjI0OnTJkSckTOOZd8fvwRsrIgK1OZ9yNUriw8cOIznN5wOQ1fu3vBru43zESxmO1nptYK7nPOORejVavgjTcgMxO++AJqspg3alzJtst60+zRC6hWLZg3+drdu/waYQ6PHQVcGIx+OhlYG8zodM45F8XmzfDWW9C9Oxx2GFx1Faxbq7z3p+dZWLURp2z8iDOab6BarBWyShG3MwoRGYoVqjtQbFWwu7BCYajqs1gNnU7YzN+N2DoAzjnnSlBQAJ9+ak1Lb74Ja9bAoYfCNdfAn9v8yLFPXIZkj4Mzz4Tnn4ejyq7kVdwShar2LeXxwoVrnHPO7cAPPwT9DlmwYAFUqQJ/+hP07w9t20LFisCI72HqVBgyBC69FMp4teCU6Mx2zrnyZPlyGDbM+h2mTIEKFeDss+Hee625ad99genT4dWv4cIL7c7586FGfOofeqJwzrkksHEjjBplyWHMGMjPh2bN4LHHoG9f64sAYOtWuPt+uP9+OOQQ6NULKleOW5IATxTOORea/HwYP96ald56C9avh1q14OabYcAAaNy42BMmTYI//xlmzLC2pyeesCQRZ54onHMuwb7/3pLDq6/C4sVQtSqcf7599p9xhjU1/cHixXD66XYW8fbb0LlzwuL1ROGccwmwZAkMHWpNS999B3vsAR06WNNS166w945WzZgzB44+GmrWhNdftx7sshr3GiMvM+6cc3GyYQP873/Qvj3Urm1NSpUqwVNPWeIYPRp6995BklizBgYNgmOOgYkT7b7zzkt4kgA/o3DOuTKVlwcffWRNSzk51kldty785S/WtNSwYQw7GTUKrrwSli2DW26Bk06Kd9hReaJwzrndpArffGPJ4bXX4JdfYL/9rEO6f3849dSdmNpw6aXw4otw/PEwciRkZMQ19lh4onDOuV20cKElhsxMmDkT9twTunSx5NC5szUzxaRwXSARSwxHHAG33QZ77RW32HeGJwrnnNsJa9fC8OF29jB+vN136qnwzDM2peGAA3Zyh4sWwRVXQJ8+dgpyxRVlHfJu80ThnHOl2LYN3n/fksOoUVaUr0EDuOceuOACOPLIXdhpQQE895ydOeTnW0d1kvJE4ZxzJVCFyZMtOQwbBitXwoEHWhdC//7QosVulFSaO9d2NHGi1eYYMgTq1SvT+MuSJwrnnIswf35REb65c62foVs3Sw4dOlg/xG6bOROmTYOXXoKBA8u8iF9Z80ThnCv3fv3VFv/JyoLPPrP72rSxVqGePaF69TJ4ke++g2+/hYsusswzfz7sv38Z7Dj+PFE458qlLVvgnXcsObzzjtXaO/ZYq7V3wQVQp04ZvtC998KDD1plv969rT5TiiQJ8EThnCtHVO2MISvLziBWr7bSSVddZQOOmjUr41agL76wIn6zZlk58McfT0gRv7LmicI5l/bmzCnqd/jpJ9hnHxtk1L+/9SXvEY9PwsWLrcLfoYfCu+9Cx45xeJHE8EThnEtLK1bYaKWsLBu9VKGC1dO7+25LElWrxumFZ82yNqyaNe20pW3bOL5YYnhRQOdc2ti0yQqsnnsuHH44XHutdRE8+qjNa/vgA2sBisvn9urVcMkl0KgRfPKJ3de9e8onCfAzCudciisogAkT7Mxh+HBYt86+zN94ozUtHX98AoLIybGOjhUr4I47Qi/iV9Y8UTjnUtKMGVZj6dVXITfX1pHu2dOSQ5s2ULFiggK55BL473+haVMbPnXiiQl64cTxROGcSxlLl9riP1lZVq21YkU45xx4+GGbmrDPPgkKJLKI38knWz2Pm28uo9l4yccThXMuqf32m7XsZGXBhx9aU1NGBjz5pE1JOOSQBAe0YAFcfjn062cdHoMGJTiAxPNE4ZxLOvn58PHHlhyysy1ZHHGENf/372+LviVcQYGViL39djujOP/8EIIIhycK51xSULUqF5mZ1ry0dKmVzujXz5LDaafZENdQzJ5tRfw+/dTWNX3uOVu2rpzwROGcC1VurnVIZ2XB9OnWzN+pk82U7tw5SSYyz55tvecvv2zNTUlexK+seaJwziXcunXw1luWHMaNs7OJVq3g6adt8Z8aNcKOEOst//ZbuPhi6NrVivjtt1/YUYXCE4VzLiG2bbMJb1lZMGKELf5z1FFw111WhK9+/bAjDGzebCsSPfywTcjo29dOa8ppkgBPFM65OFKFKVOs32HYMJuPdsABNvWgf38bWZpUrTiffWZF/GbPtjOJxx5LkravcHmicM6VuZ9/LirCN3u2Lf5z7rnW79ChA+y1V9gRlmDxYjjzTDuLGDPGOq0d4InCOVdGVq+GN9+0s4dPP7X7Wre2eWg9eyZxy83MmVafqWZN6zg580yb5u1+50UBnXO7bOtW62/o0cOqaV9+ua0tfd99Vs57wgQbVZqUSeLXX20Z0saNbe1qsNMeTxJ/4GcUzrmdomrr8WRmWhXtX3+Fgw+GK6+0pqUTT0yyfoeSvPUW/N//wapVcOed0KJF2BElNU8UzrmYzJ1b1O8wfz7svbdV0R4wANq1i9PiP/EwcCC88opltPfft2J+LqpU+dU650KwcqWt75CZCZMm2ZnCWWfB3/9ui/9UqxZ2hDGKLOJ3yim2sNBNN6VQdgtXXI+SiHQAngQqAi+o6oPFHq8DvALsF2xzu6q+G8+YnHPRbd4Mo0dbcnjvPcjLszUdHn7YymnUrBl2hDvpp5+scF///nDRReWiiF9Zi1uiEJGKwGCgHZALfCUio1R1ZsRmfwXeUNVnRKQR8C5QN14xOedKVlBgi7JlZtriP2vXwmGHwfXX2+frCSeEHeEuyM+HwYOtkmCFCjarz+2SeJ5RtADmqep8ABEZBnQDIhOFAoUnr9WBJXGMxzlXzKxZRYv/LFwIVarYCKYBA2yUaMIW/ylrs2bZxLkvvoCOHeHZZ6FOnbCjSlnxTBQ1gUURt3OBlsW2uRv4QESuAaoAZ5e0IxEZBAwCqOO/bOd2yy+/FC3+M3Wqfdlu3x4eeMAW/6lSJewIy8C8eTbTLzPTziSSfhhWcgu7J6cv8LKqPiYirYBMETlOVQsiN1LVIcAQgIyMDA0hTudS2saNNt8hM9MW/8nPt0E/TzwBffrYHIiUN3Wq1Sm/5BKbD/HTTynU257c4pkoFgO1I27XCu6L9GegA4CqfiEilYEDgeVxjMu5ciE/3yqzZmba4j8bNkDt2nDrrdbv0KhR2BGWkU2b4B//gEcftTfYr5/VZ/IkUWbimSi+AhqISD0sQfQB+hXbZiHQFnhZRI4FKgMr4hiTc2lv2jRLDq+9BkuW2Odl797W73D66SEu/hMPEyfa1O+5c61P4tFHvYhfHMQtUahqnohcDYzBhr6+pKozROQeYIqqjgJuAp4XkRuwju2BqupNS87tpMWLLTFkZVmi2GMP68P917+gSxebHJd2Fi+Gtm3tLOKjj+y6iwtJtc/ljIwMnTJlSthhOBe69eutSSkzE8aOtTllLVvamUOvXnDQQWFHGCfff28TOwDeftuGZ6VFD3x8ichUVc3YleeG3ZntnNsJeXnWGZ2ZaZ3TmzbBkUfC3/5m/Q4NGoQdYRytXAk33GCnTRMmWGnaLl3Cjqpc8EThXJJTha+/tuQwdCgsXw7772+TjAcMsCVE03r0p6rVL7/6aqtlftdddurkEsYThXNJasECmwiXlWXzx/bay75ADxhg/Q+VKoUdYYJcdJFlyYwM+PjjomYnlzCeKJxLImvWWAmNzMyiJRJOOw2eew7OP9/OJMqFyCJ+Z5wBTZpYPREv4hcKP+rOhWzrVqt2nZlpxfi2bIGjj4Z//tMmFderF3aECTZ/Plx2mXW6XHyxDXt1ofJE4VwIVK1sd2amlfFetcpGKQ0aZE1LGRlp3u9Qkvx8+Pe/bSGhihXhwgvDjsgFPFE4l0A//li0+M+8eTY3rFs3Sw7t28Oee4YdYUhmzrTSG5MmQefOVsSvVq2wo3IBTxTOxdmqVbZkaGamFTMVgTZt4C9/sUqtXmkCq8v04482a7BPn3J4OpXcPFE4FwebN8M771hyePdd2LYNGjeGBx+0UkS1a5e+j7T31Vfw7bfWH9G5s/VNVK0adlSuBJ4onCsjBQXw2WeWHN5800YwHXooXHONNS2dcIJ/UQaslO3f/26la484wg5O5cqeJJKYJwrndtMPP1ifw6uvws8/wz77wJ/+ZJ9/bdum8OI/8TB+vBXx+/FHuPxyeOghL+KXAjxROLcLli+HYcPs7GHKFKvIevbZNqS1e3fYd9+wI0xCubnQrp2dRYwdazWaXErwROFcjDZuhFGjLDmMGWOjOZs2hcceg759bY1pV4LvvrN2t1q1YORI68nfZ5+wo3I7wROFc1Hk51v9ucxMeOstq9haqxbcfLPNBzvuuLAjTGIrVsB111mBqvHjbYZ1p05hR+V2gScK50owfbolh1dftWUPqlaFnj2t3+GMM9Js8Z+ypmrtctdeC2vX2upzrVqFHZXbDZ4onAssXWrD+DMzrbVkjz2gQwdrWuraNU0X/4mHAQMsw7ZsCS++aOOCXUqLOVGIyD6qujGewTiXaBs2QE6OJYePP7YhriedBE89ZfO+0nbxn7JWUGBjf0Wsk7p5czuj8CFfaaHURCEipwAvAPsCdUTkBOByVb0q3sE5Fw95eZYUMjMtSWzcCHXr2kzp/v2hYcOwI0wx8+bZpLkBA6wMhxfxSzuxnFE8AZwDjAJQ1e9EpHVco3KujKnaJODCxX+WLYP99rPEMGAAnHKK9zvstLw8W5T7b3+zxTE8QaStmJqeVHWRbD+lND8+4ThXthYuLOp3mDnTiu517mzJoXPncrT4T1mbPt1KgE+ZYlUNn34aDj887KhcnMSSKBYFzU8qInsC1wGz4huWc7tu7VobypqZaUNbVeHUU+GZZ6BXLzjggLAjTAMLF9oSfMOG2UH12iRpLZZEcQXwJFATWAx8AHj/hEsq27bZJLjMTJsUt3kz1K8Pd99tzUtHHhl2hGlg0iQbDjZokM2HmD/fp6CXE7EkioaqekHkHSJyKvBZfEJyLjaqVoA0M9O+2K5cCTVqWFP5gAHQooV/0S0Tv/1m/RD/+pdl3IsusjY7TxLlRiyJ4t/AiTHc51xCzJ9vw/SzsmDOHPvM6trVkkOHDuV48Z94GDvWRjTNnw9XXml10r1jp9zZYaIQkVbAKcBBInJjxEPVAB8c7RLq11+tdHdmppXyBisZdOutNmO6evVQw0tPublwzjm2aPeECdDaBzuWV9HOKPbC5k7sAUQWil8H9IxnUM4BbNlii/5kZtoiQFu3wrHHwv33wwUXQJ06YUeYpr75Bpo1s6JWo0dbzRKfll6u7TBRqOoEYIKIvKyqCxIYkyvHVO2MISvLlg9dvRoOOQSuusqalpo1836HuPnlF5tN/cYbRUX8OnQIOyqXBGLpo9goIo8AjYHfVxhR1bPiFpUrd+bMseSQlWXLJ++9N5x3niWHs8+2uksuTlSt0+e666ymyb332gxE5wKx/Pu9CrwOdMGGyl4ErIhnUK58WLECXn/dmpYmT7aZ0W3b2pDW887zlTETpl8/GzbWqpUV8Tv22LAjckkmlkRRQ1VfFJHrIpqjvop3YC49bdpkzd6ZmfD++1YF4oQT4JFH7PPKJ/cmSGQRv/btLUn83/95ET9XolgSxbbg51IR6QwsAXxuq4tZQYENmsnKguHDYd06Swg33GBNS8cfH3aE5cycOTbk9cILbdLJxReHHZFLcrEkintFpDpwEzZ/ohpwfVyjcmlhxgxLDq++CosW2fysHj0sObRp419eEy4vDx5/HO66CypX9pFMLmalJgpVfTu4uhY4E36fme3cHyxbZtVZMzNtlGXFijYU/6GHrHacL5UckmnTrAT41KnWATR4sC/y7WIWbcJdRaAXVuPpfVWdLiJdgL8AewPNEhOiS3a//QYjRlhy+PBDa2rKyLCKD3362PBWF7LcXDute/NNO63zMcZuJ0Q7o3gRqA1MBp4SkSVABnC7qo6IZeci0gErKFgReEFVHyxhm17A3YAC36lqv516By4U+flW3SEzE7KzLVkccQTccYdNhvOBM0ng88/tTOKKK4qK+FWpEnZULgVFSxQZQBNVLRCRysAy4ChVXRXLjoMzksFAOyAX+EpERqnqzIhtGgB3AKeq6moROXhX34iLP1UrHpqVZWs8LF1qpTP69bMKraed5ov/JIUNG+DOO+Hf/4ajjrLO6kqVPEm4XRYtUWxV1QIAVd0sIvNjTRKBFsA8VZ0PICLDgG7AzIhtLgMGq+rq4HWW71T0LiFyc4sW/5k+3YrudepkyaFLF+sXdUnigw+sDPjChTbc9f77vYif223REsUxIjItuC7AUcFtAVRVm5Sy75rAoojbuUDLYtscDSAin2HNU3er6vvFdyQig4BBAHW8wE9CrFtnTUqZmTBunJ1NtGplfaC9e1s5b5dkFi2yZfuOOgomTrRTPOfKQLREkYhW5j2ABkAboBYwUUSOV9U1kRup6hBgCEBGRoYmIK5yads2+0KalQUjR9rkuKOOstGUF1xgCwG5JDR1KjRvDrVrWxXF00/30zxXpqIVBdzdQoCLsc7wQrWC+yLlApNUdRvwk4jMwRKHz/xOEFVb9jgry4a1rlhhS4VefLE1LZ18sg+QSVrLlsE119gsxsIifu3ahR2VS0PxLLX2FdBAROphCaIPUHxE0wigL/BfETkQa4qaH8eYXODnn20iXGYmzJ4Ne+1li//07w8dO9ptl6RU4X//s6ntGzdaP4QX8XNxFLdEoap5InI1MAbrf3hJVWeIyD3AFFUdFTzWXkRmAvnALTvZYe52wurVNow+Kws++cTua90abroJzj8f9tsv3PhcjPr0sVLgp54KL7wAxxwTdkQuzYlq6U3+IrI3UEdVZ8c/pOgyMjJ0ypQpYYeRMrZutWbrrCwrxrd1KzRsaGU0LrgA6tYNO0IXk8gifq+8AuvX2yIdPh7ZxUhEpqpqxq48t9QzChE5F3gUW/Gunog0Be5R1a678oIu/lThiy8sObz+ui0jevDBtuRx//7W7+n9Dinkhx/g0kth4ED7edFFYUfkyplYmp7uxuZEjAdQ1W+DfgeXZObOtX6HrCz48Uer+da9uyWHdu1s/oNLIdu2Wf31f/zDJsvtu2/YEblyKqYy46q6Vrb/CupDVJPEypV21pCVBV9+aWcKZ50Ff/0r/OlPUK1a2BG6XfLttzb07NtvoWdPm2V96KFhR+XKqVgSxQwR6QdUDEpuXAt8Ht+wXDSbN1t/Q1aW9T/k5cFxx1mF1n79oFatsCN0u23ZMru89ZZlfOdCFEuiuAa4E9gCvIaNVLo3nkG5PyoosJFKWVk2cmntWqsSff311rR0wglhR+h226efWhG/q66CDh2s/dDrsrskEEuiOEZV78SShUuwWbOKFv9ZsMCaqnv0sORw1lm++E9aWL/eyu4OHgwNGtiqc5UqeZJwSSOWRPGYiBwKDAdeV9XpcY6p3PvlF5slnZVl1RkqVLBlje+7zzqnvQhoGhkzxor4LVoE110H997rRfxc0ollhbszg0TRC3hORKphCcObn8rQxo22+E9WltVbys+HE0+EJ56w+VXej5mGFi2y8rv161uzk8+udkkqpgl3v28scjxwK9BbVUMp8pBOE+7y860ya+HiPxs2WF23/v3t0qhR2BG6MqcKX30FLVrY7Y8+siqvXsTPxVm8J9wdC/QGegCrgNeBm3blxZyZNq2o32HJEhvC2ru3Jb3XEfMAAB85SURBVIfWrX2ybdpautTWiMjJKSrid/bZYUflXKli6aN4CUsO56jqkjjHk7YWL7Z+h8xMSxR77GHF9/71L2t92HvvsCN0caMKL78MN95oY5sfesjqNDmXImLpo2iViEDS0fr11qSUlQUff2yfFy1bwn/+A716wUEHhR2hS4hevawU+OmnWxG/o48OOyLndsoOE4WIvKGqvUTke7afiR3rCnflUl4efPihJYecHFv858gj4W9/syJ8/hlRTuTn2zT5ChXg3HNtLPPll3u7oktJ0c4orgt+dklEIKlMFb7+2pqVhg6F5cth//2tdlv//jaYxYvwlSOzZtlciIsvhssugwsvDDsi53ZLtBXulgZXr1LV2yIfE5GHgNv++KzyZcGCoiJ8s2bZYj9dulgJ744dfTh8ubNtm/U//POfVsCvevWwI3KuTMTSmd2OPyaFjiXcV26o2iilN9+026edBs89Z4v/7L9/uLG5kHzzjZUBnzbN/jieespquzuXBqL1UVwJXAUcKSLTIh6qCnwW78CS2ZQpliQuvxxuuw3qedF198svVsp3xAjo1i3saJwrU9HOKF4D3gMeAG6PuH+9qv4a16iSXHa2DW+9/3444ICwo3GhmTgRvv/e5kZ06ADz5vk4Z5eWog3BUFX9Gfg/YH3EBREptx+PqpYo2rTxJFFurVtnFV7POMOamLZssfs9Sbg0FS1RvBb8nApMCX5OjbhdLs2aBXPm+BIB5da770LjxtYpdeONNtzNRy24NBdt1FOX4Ke3wEfIzraf3gxdDi1aZL/4hg1tAl3LlmFH5FxClDr7R0ROFZEqwfX+IvK4iNSJf2jJKScHWrWCww8POxKXEKq2xixYxcYPPrCzCE8SrhyJZZroM8BGETkBKwb4I5AZ16iS1M8/22eENzuVE0uW2AIgrVrBhAl235ln2oQZ58qRWBJFnlot8m7Af1R1MDZEttwZMcJ+nndeuHG4OFO1mkyNGtkZxKOPehE/V67FMuFuvYjcAQwATheRCsCe8Q0rOWVnQ5MmcNRRYUfi4qpnT/tln3GGJYz69cOOyLlQxXJG0RvYAlyiqsuAWsAjcY0qCf3yiy1C5mcTaSo/HwoK7Hr37vDsszB2rCcJ54ghUQTJ4VWguoh0ATar6v/iHlmSGTXKWiS8fyINTZ9uTUsvvmi3BwzwSq/ORYhl1FMvYDJwPrZu9iQR6RnvwJJNdraVCz/++LAjcWVm61b4xz9scfIff/RCXc7tQCx9FHcCJ6nqcgAROQj4CBgez8CSydq1tvDQddd5ufC0MXWqFfGbPh369bOlBn0lKedKFEuiqFCYJAKriK1vI228845VkPb+iTSyahWsWQOjR1tteOfcDsWSKN4XkTHA0OB2b+Dd+IWUfHJy4NBD4eSTw47E7ZZx46yI37XXQvv2MHcuVK4cdlTOJb1YOrNvAZ4DmgSXIcUXMkpnmzZZeZ/zzvO+zZS1dq11Tp91FjzzTFERP08SzsUk2noUDYBHgaOA74GbVXVxogJLFh98ABs3erNTyho9Gq64ApYtg5tvts5rL+Ln3E6J9h35JeBtoAdWMfbfCYkoyeTkwH77WVlxl2IWLYIePaBGDavX9MgjsM8+YUflXMqJ1kdRVVWfD67PFpGvExFQMtm2zeZPnHsu7Fku56KnIFX44gs45ZSiIn6nnOL1mZzbDdHOKCqLSDMROVFETgT2Lna7VCLSQURmi8g8Ebk9ynY9RERFJGNn30A8TZwIq1f7JLuUkZsLXbva5LnCIn5t2niScG43RTujWAo8HnF7WcRtBc6KtmMRqQgMBtoBucBXIjJKVWcW264qcB0waedCj7/sbFu0rH37sCNxURUUwPPPwy23QF4ePP44nHZa2FE5lzaiLVx05m7uuwUwT1XnA4jIMKwC7cxi2/0TeAi4ZTdfr0wVFFi12I4dvVk76fXoYb+ss86yhHHkkWFH5FxaieeAz5rAoojbucF9vwuasGqr6jvRdiQig0RkiohMWbFiRdlHWoLJk205Am92SlJ5eUVF/Hr0sATx0UeeJJyLg9BmBgTlyh/HFkOKSlWHqGqGqmYclKAyCzk5sMce0LlzQl7O7Yxp02wxoeeDsRb9+8Oll3p9FefiJJ6JYjFQO+J2reC+QlWB44DxIvIzcDIwKhk6tFWtf6JtWxsa65LEli1w113QvDksWOC1mZxLkFiqx0qwVvbfg9t1RKRFDPv+CmggIvVEZC+gDzCq8EFVXauqB6pqXVWtC3wJdFXVKbv0TsrQ9Okwb55PsksqX31lVV7vuQf69oVZs7xd0LkEieWM4mmgFdA3uL0eG80UlarmAVcDY4BZwBuqOkNE7hGRrrsYb0Lk5FgrRrduYUfifrd6NWzYYPVU/vc/m0TnnEsIseWwo2wg8rWqnigi36hqs+C+71T1hIREWExGRoZOmRLfk46mTWHffW1FOxeisWOtiN9119ntLVu8/IZzu0hEpqrqLjXtx3JGsS2YE6HBix0EFOzKi6WC+fPhu++8VSNUa9bAZZdZJ9FzzxUV8fMk4VwoYkkUTwE5wMEich/wKXB/XKMKUU6O/fT+iZCMHAmNGsFLL8Gtt9oCQ54gnAtVqetRqOqrIjIVaAsI0F1VZ8U9spDk5FjTU716YUdSDi1cCOefD8cea0W2MkIfAOecI7ZRT3WAjcBobNTSb8F9aWfpUvj8c292SihV+OQTu16njk2a++orTxLOJZFYVrh7B+ufEKAyUA+YDTSOY1yhGDnSPre82SlBFi60tSLeew/Gj4czzoDWrcOOyjlXTCxNT8dH3g7KblwVt4hClJMDDRpA47RLgUmmoACefRZuu80y81NPeRE/55JYLGcU21HVr0WkZTyCCdPq1TYa88YbvRJE3P3pT3b61q4dDBkCdeuGHZFzLopSE4WI3BhxswJwIrAkbhGF5J13rM6c90/ESV6eLTpeoQL07m2zGQcO9KzsXAqIZXhs1YhLJazPIu3mLGdnQ82acNJJYUeShr77Dlq2tLMHsBIcF1/sScK5FBH1jCKYaFdVVW9OUDyh2LgR3n8fLrnEvvC6MrJ5M9x7Lzz0EBxwABx6aNgROed2wQ4ThYjsoap5InJqIgMKw5gxsGmTNzuVqcmT4aKL4Icf7Ofjj1uycM6lnGhnFJOx/ohvRWQU8CbwW+GDqpod59gSJifHPsN8ZGYZWrfOsu/778M554QdjXNuN8Qy6qkysApbI7twPoUCaZEotm6F0aOhe3dbqMjthg8+gBkz4IYb4OyzYfZsL7/hXBqI9tF4cDDiaTpFCaJQ9JKzKWT8eKtB55PsdsPq1Tau+OWXbRLKVVdZgvAk4VxaiNZ1WxHYN7hUjbheeEkLOTlQpYoN6Xe7IDvbivhlZsIdd8CUKZ4gnEsz0c4olqrqPQmLJAQFBTBiBHTqBHvvHXY0KWjhQujTB447zhYUatYs7Iicc3EQ7Ywi7Qe5f/klLFvmzU47RRUmTLDrderYdPZJkzxJOJfGoiWKtgmLIiTZ2bDXXtC5c9iRpIgFC6BjR2jTpihZnHYa7LlnqGE55+Jrh4lCVX9NZCCJpmr9E23bQrVqYUeT5AoK4D//sY7qTz+Ff/8bTj897KiccwlSbgeETptmy57ecUfYkaSA7t1tDPE559jSpEccEXZEzrkEKreJIjvbynV07Rp2JElq2zaoWNEOUt++0LMnDBjg9ZmcK4fKbWWjnBxrXj/44LAjSUJffw0tWtiaEWCJ4sILPUk4V06Vy0Qxbx58/73XdvqDTZusLa5FCxsOVrt22BE555JAuWx6ysmxn927hxtHUvnySyveN2eOldF99FHYf/+wo3LOJYFymSiys6F5c++T3c5vv1m/xIcfWp0m55wLlLumpyVL7MuzT7LDKrs+9phdb9vWSoJ7knDOFVPuEsWIEfazXPdPrFplzUwdO8Irr1gJXbDZh845V0y5SxTZ2dCwIRx7bNiRhEAVhg+3In6vvQZ//St89ZUnCOdcVOWqj+LXX62s+K23hh1JSBYuhH79oEkTWzvihBPCjsg5lwLK1RnF6NGQn1/Omp1UrXAfWO/9+PHWSeNJwjkXo3KVKHJybGpA8+ZhR5IgP/0E7dtbR3VhEb9TTvGl/JxzO6XcJIrffoMxY2y0U9pPMM7PhyeftHUiJk2CZ57xIn7OuV1Wbr5avv8+bN5cTobFdusG77xjKzI9+6zPsHbO7ZZykyiys+HAA62+U1qKLOI3YIDVZ+rXrxycPjnn4i2uTU8i0kFEZovIPBG5vYTHbxSRmSIyTUQ+FpG4zJXeuhXeftsqxaZl8/yUKZCRYU1MAL17wwUXeJJwzpWJuCUKEakIDAY6Ao2AviLSqNhm3wAZqtoEGA48HI9Yxo6FdevScLTTpk1w223QsiWsWOE1SZxzcRHPM4oWwDxVna+qW4FhQLfIDVR1nKpuDG5+CdSKRyDZ2bDvvjb4J2188YUNcX34YSviN3MmdOkSdlTOuTQUz4aYmsCiiNu5QMso2/8ZeK+kB0RkEDAIoE6dOjsVRH4+jBxp62JXrrxTT01umzbZEqUffZRmGdA5l2ySosVeRPoDGcAZJT2uqkOAIQAZGRm6M/v+/HNYvjxNmp3efRdmzIBbboGzzoJZs2DPPcOOyjmX5uLZ9LQYiByXWSu4bzsicjZwJ9BVVbeUdRA5OVCpktW/S1krV0L//nZa9OqrRUX8PEk45xIgnoniK6CBiNQTkb2APsCoyA1EpBnwHJYklpd1AKrWP9GuHVStWtZ7TwBVGDbMKhi+8QbcdRdMnuxF/JxzCRW3RKGqecDVwBhgFvCGqs4QkXtEpGuw2SPAvsCbIvKtiIzawe52ybffwoIFKTzJbuFCKwderx5MnQp33+1JwjmXcHHto1DVd4F3i93394jrcV0lJzvb5p917Vr6tklDFT7+2BYQOuIIq9F00kk2mc4550KQ1rWesrOhdWubkZ0SfvzRRjC1a1dUxO/kkz1JOOdClbaJYvZsm1qQEqOd8vPh8cfh+OOtiem557yIn3MuaSTF8Nh4yMmxn927hxtHTM49F957zybMPfMM1IrLvEPnnNslaZ0oTjopiQunbt1qhacqVICBA62QX58+Xp/JOZd00rLpKTfXRpEmbbPT5Mm2etLTT9vtXr2s2qsnCedcEkrLRDFihP1MumGxGzfCTTdBq1awejUcdVTYETnnXKnSsukpOxsaNYKGDcOOJMKnn9qciPnz4fLL4aGHoHr1sKNyzrlSpV2iWLnSRpbecUfYkRRTuLDQuHHQpk3Y0TjnXMzSLlGMHm1FVZOif2L0aCvcd+utcOaZNl43LVdOcs6ls7Tro8jOtgnNzZqFGMSKFbYMadeuMHRoURE/TxLOuRSUVoli/Xr48EPrxA5lAJEqvPaaFfEbPhzuuQcmTfL6TM65lJZWX3Hfew+2bAmx2WnhQrj4YjudefFFaNw4pECcc67spNUZRU4OHHQQnHJKAl+0oADGjLHrRxwBn3wCn33mScI5lzbSJlFs2QLvvGMlOxJWQ2/uXFtprkMHmDjR7mvRwov4OefSStokio8/tj6KhEyyy8uDRx6BJk1s0YsXX/Qifs65tJU2fRTZ2VCtmn3Bj7suXay5qVs3K8Nx+OEJeFHnUs+2bdvIzc1l8+bNYYdSblSuXJlatWqxZxkulZwWiSIvD0aOtM/vSpXi9CJbttga1RUqwKWXwiWXwPnne30m56LIzc2latWq1K1bF/H/lbhTVVatWkVubi716tUrs/2mRdPTZ5/ZjOy4NTt9+SWceCIMHmy3e/a0Qn7+h+9cVJs3b6ZGjRqeJBJERKhRo0aZn8GlRaLIzobKla1PuUz99hvccIMNo1q/Hho0KOMXcC79eZJIrHgc75RvelK1YbHt28O++5bhjj/5xIr4/fQTXHUVPPCAdYI451w5k/JnFFOnwqJFcZhkl5dnfRITJliTkycJ51LWiBEjEBF++OGH3+8bP348Xbp02W67gQMHMnz4cMA64m+//XYaNGjAiSeeSKtWrXjvvfd2O5YHHniA+vXr07BhQ8YUzsEq5vTTT6dp06Y0bdqUww8/nO7BUp2qyrXXXkv9+vVp0qQJX3/99W7HE4uUP6PIybFpC+eeWwY7GzHCivjdcYcV8Zsxw+szOZcGhg4dymmnncbQoUP5xz/+EdNz/va3v7F06VKmT59OpUqV+OWXX5gwYcJuxTFz5kyGDRvGjBkzWLJkCWeffTZz5syhYrG5V5988snv13v06EG3bt0AeO+995g7dy5z585l0qRJXHnllUyaNGm3YopFyn8KZmdb1e4DDtiNnfzyC1xzDbz5pnVa33ST1WfyJOFcmbn+ept2VJaaNoV//Sv6Nhs2bODTTz9l3LhxnHvuuTElio0bN/L888/z008/USkYSnnIIYfQq1ev3Yp35MiR9OnTh0qVKlGvXj3q16/P5MmTadWqVYnbr1u3jrFjx/Lf//739+dfeOGFiAgnn3wya9asYenSpRx22GG7FVdpUrrpadYs+OGH3Wh2UoXMTFvlaORIuO8+G+HkRfycSxsjR46kQ4cOHH300dSoUYOpU6eW+px58+ZRp04dqsXQ5HzDDTf83kwUeXnwwQf/sO3ixYupXbv277dr1arF4sWLd7jvESNG0LZt29/j2Nnnl5WU/sqck2M/g7Oynbdwoc2JyMiw2dXHHFNmsTnntlfaN/94GTp0KNdddx0Affr0YejQoTRv3nyHo4N2dtTQE088sdsx7sjQoUO59NJL47b/WKV0osjOhpNPhpo1d+JJhUX8Ona0In6ffWbVXr0+k3Np59dff2Xs2LF8//33iAj5+fmICI888gg1atRg9erVf9j+wAMPpH79+ixcuJB169aVelZxww03MG7cuD/c36dPH26//fbt7qtZsyaLFi36/XZubi41d/ABtnLlSiZPnkxO4TfinXx+mVLVlLo0b95cVVUXLFAF1Yce0tjNnq16+un2xPHjd+KJzrldMXPmzFBf/7nnntNBgwZtd1/r1q11woQJunnzZq1bt+7vMf78889ap04dXbNmjaqq3nLLLTpw4EDdsmWLqqouX75c33jjjd2KZ/r06dqkSRPdvHmzzp8/X+vVq6d5eXklbvvMM8/ohRdeuN19b7/9tnbo0EELCgr0iy++0JNOOqnE55Z03IEpuoufuynbR1GYZGOajZ2XBw89ZEX8vv8e/vtfaN06rvE558I3dOhQziv2IdGjRw+GDh1KpUqVyMrK4uKLL6Zp06b07NmTF154gerVqwNw7733ctBBB9GoUSOOO+44unTpElOfRTSNGzemV69eNGrUiA4dOjB48ODfRzx16tSJJUuW/L7tsGHD6Nu373bP79SpE0ceeST169fnsssu4+mnn96teGIllmhSR0ZGhk6ZMoU2bWDVKvvcL9U558AHH1iv9+DBcOih8Q7TOQfMmjWLY489Nuwwyp2SjruITFXVjF3ZX0qeUaxYYROno4522rwZ8vPt+qBBtjTpW295knDOuZ2Ukoli1Cjrk95hovjsMxtgXVjEr0cPuzjnnNtpKZkosrOhXj3rctjOhg1w7bW2iNDmzeCnvM6FLtWat1NdPI53yiWK/Hz46CM7m9huuPOECXDccfCf/8DVV8P06dCuXWhxOudsEZ1Vq1Z5skgQDdajqFy5cpnuN+XmUaxdC1u37mC00z77WOfFqacmPC7n3B/VqlWL3NxcVqxYEXYo5UbhCndlKeVGPR1wQIZWqjSFxYuhwohsq+Hxl7/Yg/n5PnHOOedKkLSjnkSkg4jMFpF5InJ7CY9XEpHXg8cniUjd0va5di0MaLeMCr16Wgd1To6dYoAnCeeci4O4JQoRqQgMBjoCjYC+ItKo2GZ/Blaran3gCeCh0va7f8Eq7ss5Ft5+2xYT+vxzL+LnnHNxFM8zihbAPFWdr6pbgWFA8fJ93YBXguvDgbZSSkWuI1hAxROOg+++g9tvt8WFnHPOxU08O7NrAosibucCLXe0jarmichaoAawMnIjERkEDApubqn42afTvdIrAAdS7FiVY34sivixKOLHokjDXX1iSox6UtUhwBAAEZmyqx0y6caPRRE/FkX8WBTxY1FERKbs6nPj2fS0GKgdcbtWcF+J24jIHkB1YFUcY3LOObeT4pkovgIaiEg9EdkL6AOMKrbNKOCi4HpPYKym2nhd55xLc3Fregr6HK4GxgAVgZdUdYaI3IPVRR8FvAhkisg84FcsmZRmSLxiTkF+LIr4sSjix6KIH4siu3wsUm7CnXPOucRKuVpPzjnnEssThXPOuaiSNlHEo/xHqorhWNwoIjNFZJqIfCwiR4QRZyKUdiwitushIioiaTs0MpZjISK9gr+NGSLyWqJjTJQY/kfqiMg4Efkm+D/pFEac8SYiL4nIchGZvoPHRUSeCo7TNBE5MaYd7+pi2/G8YJ3fPwJHAnsB3wGNim1zFfBscL0P8HrYcYd4LM4E9gmuX1mej0WwXVVgIvAlkBF23CH+XTQAvgH2D24fHHbcIR6LIcCVwfVGwM9hxx2nY9EaOBGYvoPHOwHvAQKcDEyKZb/JekYRl/IfKarUY6Gq41R1Y3DzS2zOSjqK5e8C4J9Y3bDNiQwuwWI5FpcBg1V1NYCqLk9wjIkSy7FQoFpwvTqwJIHxJYyqTsRGkO5IN+B/ar4E9hORw0rbb7ImipLKf9Tc0TaqmgcUlv9IN7Eci0h/xr4xpKNSj0VwKl1bVd9JZGAhiOXv4mjgaBH5TES+FJEOCYsusWI5FncD/UUkF3gXuCYxoSWdnf08AVKkhIeLjYj0BzKAM8KOJQwiUgF4HBgYcijJYg+s+akNdpY5UUSOV9U1oUYVjr7Ay6r6mIi0wuZvHaeqBWEHlgqS9YzCy38UieVYICJnA3cCXVV1S4JiS7TSjkVV4DhgvIj8jLXBjkrTDu1Y/i5ygVGquk1VfwLmYIkj3cRyLP4MvAGgql8AlbGCgeVNTJ8nxSVrovDyH0VKPRYi0gx4DksS6doODaUcC1Vdq6oHqmpdVa2L9dd0VdVdLoaWxGL5HxmBnU0gIgdiTVHzExlkgsRyLBYCbQFE5FgsUZTH9VlHARcGo59OBtaq6tLSnpSUTU8av/IfKSfGY/EIsC/wZtCfv1BVu4YWdJzEeCzKhRiPxRigvYjMBPKBW1Q17c66YzwWNwHPi8gNWMf2wHT8YikiQ7EvBwcG/TF3AXsCqOqzWP9MJ2AesBG4OKb9puGxcs45V4aStenJOedckvBE4ZxzLipPFM4556LyROGccy4qTxTOOeei8kThkpKI5IvItxGXulG23VAGr/eyiPwUvNbXwezdnd3HCyLSKLj+l2KPfb67MQb7KTwu00VktIjsV8r2TdO1UqpLHB8e65KSiGxQ1X3Letso+3gZeFtVh4tIe+BRVW2yG/vb7ZhK26+IvALMUdX7omw/EKuge3VZx+LKDz+jcClBRPYN1tr4WkS+F5E/VI0VkcNEZGLEN+7Tg/vbi8gXwXPfFJHSPsAnAvWD594Y7Gu6iFwf3FdFRN4Rke+C+3sH948XkQwReRDYO4jj1eCxDcHPYSLSOSLml0Wkp4hUFJFHROSrYJ2Ay2M4LF8QFHQTkRbBe/xGRD4XkYbBLOV7gN5BLL2D2F8SkcnBtiVV33Vue2HXT/eLX0q6YDOJvw0uOVgVgWrBYwdiM0sLz4g3BD9vAu4MrlfEaj8diH3wVwnuvw34ewmv9zLQM7h+PjAJaA58D1TBZr7PAJoBPYDnI55bPfg5nmD9i8KYIrYpjPE84JXg+l5YJc+9gUHAX4P7KwFTgHolxLkh4v29CXQIblcD9giunw28FVwfCPwn4vn3A/2D6/th9Z+qhP379ktyX5KyhIdzwCZVbVp4Q0T2BO4XkdZAAfZN+hBgWcRzvgJeCrYdoarfisgZ2EI1nwXlTfbCvomX5BER+StWA+jPWG2gHFX9LYghGzgdeB94TEQewpqrPtmJ9/Ue8KSIVAI6ABNVdVPQ3NVERHoG21XHCvj9VOz5e4vIt8H7nwV8GLH9KyLSACtRsecOXr890FVEbg5uVwbqBPtyrkSeKFyquAA4CGiuqtvEqsNWjtxAVScGiaQz8LKIPA6sBj5U1b4xvMYtqjq88IaItC1pI1WdI7buRSfgXhH5WFXvieVNqOpmERkPnAP0xhbZAVtx7BpVHVPKLjapalMR2QerbfR/wFPYYk3jVPW8oON//A6eL0APVZ0dS7zOgfdRuNRRHVgeJIkzgT+sCy62Vvgvqvo88AK2JOSXwKkiUtjnUEVEjo7xNT8BuovIPiJSBWs2+kREDgc2qmoWVpCxpHWHtwVnNiV5HSvGVnh2Avahf2Xhc0Tk6OA1S6S2ouG1wE1SVGa/sFz0wIhN12NNcIXGANdIcHolVnnYuag8UbhU8SqQISLfAxcCP5SwTRvgOxH5Bvu2/qSqrsA+OIeKyDSs2emYWF5QVb/G+i4mY30WL6jqN8DxwOSgCegu4N4Snj4EmFbYmV3MB9jiUh+pLd0JlthmAl+LyHSsbHzUM/4glmnYojwPAw8E7z3yeeOARoWd2diZx55BbDOC285F5cNjnXPOReVnFM4556LyROGccy4qTxTOOeei8kThnHMuKk8UzjnnovJE4ZxzLipPFM4556L6fzUIxXFWB9QlAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:SumEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05109858512878418 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.060066938400268555 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:WOEEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "[False  True]\n",
            "leftover columns are\n",
            "['NIHSS1a', 'NIHSS1b', 'NIHSS1c', 'NIHSS2', 'NIHSS4', 'NIHSS5a', 'NIHSS5b', 'NIHSS6a', 'NIHSS9', 'NIHSS10']\n",
            "check test 8\n",
            "############### Model: lr ###############\n",
            "current grid used is: \n",
            "{'C': [0.001, 0.01, 0.1], 'penalty': ['l1', 'l2']}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05809426307678223 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.001, 'penalty': 'l1'}\n",
            "0.742792 (0.003951) with: {'C': 0.001, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.01, 'penalty': 'l1'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'penalty': 'l2'}\n",
            "nan (nan) with: {'C': 0.1, 'penalty': 'l1'}\n",
            "0.755145 (0.005376) with: {'C': 0.1, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n",
            "current grid used is: \n",
            "{'C': [0.01], 'penalty': ['l2'], 'max_iter': [300]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  y = column_or_1d(y, warn=True)\n",
            "No handles with labels found to put in legend.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.05221366882324219 minutes\n",
            "Best: 0.755351 using {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "0.755351 (0.004138) with: {'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "Precision is [0.79339228 0.69314642] \n",
            "Recall is [0.89642482 0.50056243] \n",
            "Fscore is [0.84176746 0.5813194 ] \n",
            "Support is [1902  889] \n",
            "AUC is 0.6984936228397317\n",
            "{'C': 0.01, 'max_iter': 300, 'penalty': 'l2'}\n",
            "importance is \n",
            "[[-0.005593    0.23150409  0.06208414  0.62515574  0.16049727  0.30089744\n",
            "   0.20706034  0.03293165  0.13272022  0.08491693]]\n",
            "[0 1]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.683 - 0.713]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1705  197]\n",
            " [ 444  445]]\n",
            "Precision is 0.7432693464612244 \n",
            "Recall is 0.6984936228397318 \n",
            "Fscore is 0.7115434319545326 \n",
            "Support is None \n",
            "AUC is 0.6984936228397317\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "0.702393963372875\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'\\nw/o resample \\n\\n Enc:WOEEncoder + rf + f_regression\\nPrecision is 0.754037598729604 \\nRecall is 0.7040906524839553 \\nFscore is 0.7209070584477802 \\nSupport is None \\nAUC is 0.7040906524839554\\n\\n\\nw/ resample\\nlr + Enc:OrdinalEncoder + f_classif\\nPrecision is 0.7240856738735097 \\nRecall is 0.7491921945566913 \\nFscore is 0.7333033718496091 \\nSupport is None \\nAUC is 0.7491921945566912\\n[[972 230]\\n [139 309]]\\n'"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sIBzXg8NWQUG"
      },
      "source": [
        "# Run One"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "c2M-3kl-WTDH",
        "outputId": "82ec1806-9cf5-436f-cf45-4938bb388583"
      },
      "source": [
        "import category_encoders as ce\n",
        "\n",
        "\n",
        "saveFile = True\n",
        "debugMode = False\n",
        "models = ['rf']\n",
        "\n",
        "# select encoding type\n",
        "encs = [\n",
        "      'OrdinalEncoder',\n",
        "]\n",
        "\n",
        "# select score function for feature selection\n",
        "scoreFunctions=[\n",
        "      'f_regression', #(~0.792 * 5)\n",
        "]\n",
        "\n",
        "runAll(models, encs=encs, scoreFunctions=scoreFunctions)\n",
        "\n",
        "\n",
        "\"\"\"\n",
        "w/o resample \n",
        "\n",
        " Enc:WOEEncoder + rf + f_regression\n",
        "Precision is 0.754037598729604 \n",
        "Recall is 0.7040906524839553 \n",
        "Fscore is 0.7209070584477802 \n",
        "Support is None \n",
        "AUC is 0.7040906524839554\n",
        "\n",
        "\n",
        "w/ resample\n",
        "lr + Enc:OrdinalEncoder + f_classif\n",
        "Precision is 0.7240856738735097 \n",
        "Recall is 0.7491921945566913 \n",
        "Fscore is 0.7333033718496091 \n",
        "Support is None \n",
        "AUC is 0.7491921945566912\n",
        "[[972 230]\n",
        " [139 309]]\n",
        "\"\"\""
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "@@@@@@@@@@@@@@@@@@@@@@   ScoreFunction:<function f_regression at 0x7fbddfd410e0>   @@@@@@@@@@@@@@@@@@@@@\n",
            "$$$$$$$$$$$$$$$$$$$$$$$$   Enc:OrdinalEncoder   $$$$$$$$$$$$$$$$$$$$$$$\n",
            "Index(['gender', 'smoke', 'highBloodPressure', 'atrialFibrillation',\n",
            "       'diabetes', 'coronaryHeartDisease', 'congestiveHeartFailure',\n",
            "       'anticoagulantMedicalHistory'],\n",
            "      dtype='object')\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n",
            "  elif pd.api.types.is_categorical(cols):\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "[False  True]\n",
            "check test 8\n",
            "############### Model: rf ###############\n",
            "current grid used is: \n",
            "{'n_estimators': [30, 50], 'max_depth': [10, 15, 20]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 0.855954647064209 minutes\n",
            "Best: 0.772692 using {'max_depth': 10, 'n_estimators': 50}\n",
            "0.769804 (0.005788) with: {'max_depth': 10, 'n_estimators': 30}\n",
            "0.772692 (0.006128) with: {'max_depth': 10, 'n_estimators': 50}\n",
            "0.767673 (0.006748) with: {'max_depth': 15, 'n_estimators': 30}\n",
            "0.767886 (0.004570) with: {'max_depth': 15, 'n_estimators': 50}\n",
            "0.766108 (0.005837) with: {'max_depth': 20, 'n_estimators': 30}\n",
            "0.767470 (0.005469) with: {'max_depth': 20, 'n_estimators': 50}\n",
            "Precision is [0.81479643 0.66409266] \n",
            "Recall is [0.86277603 0.58042745] \n",
            "Fscore is [0.8381001  0.61944778] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7216017359028859\n",
            "{'max_depth': 10, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True, False], 'max_features': [5, 8, None]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 1.2726757526397705 minutes\n",
            "Best: 0.773266 using {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.772164 (0.005136) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.773266 (0.003884) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.769362 (0.004359) with: {'bootstrap': True, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "0.771092 (0.003953) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 5, 'n_estimators': 50}\n",
            "0.767869 (0.004929) with: {'bootstrap': False, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "0.741537 (0.008717) with: {'bootstrap': False, 'max_depth': 10, 'max_features': None, 'n_estimators': 50}\n",
            "Precision is [0.80819912 0.66846361] \n",
            "Recall is [0.87066246 0.55793026] \n",
            "Fscore is [0.83826879 0.60821582] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7142963596427419\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'n_estimators': 50}\n",
            "current grid used is: \n",
            "{'n_estimators': [50], 'max_depth': [10], 'bootstrap': [True], 'max_features': [8], 'min_samples_leaf': [5, 10], 'min_samples_split': [5, 10]}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:739: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  self.best_estimator_.fit(X, y, **fit_params)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Execution time is 1.189293384552002 minutes\n",
            "Best: 0.773753 using {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.773270 (0.005086) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 5, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.771099 (0.006452) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 5, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "0.773149 (0.004692) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 5, 'n_estimators': 50}\n",
            "0.773753 (0.003542) with: {'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n",
            "Precision is [0.81111658 0.66622691] \n",
            "Recall is [0.86698212 0.56805399] \n",
            "Fscore is [0.83811944 0.61323619] \n",
            "Support is [1902  889] \n",
            "AUC is 0.7175180586653798\n",
            "{'bootstrap': True, 'max_depth': 10, 'max_features': 8, 'min_samples_leaf': 10, 'min_samples_split': 10, 'n_estimators': 50}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Confidence interval for the score: [0.702 - 0.731]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "[[1649  253]\n",
            " [ 384  505]]\n",
            "Precision is 0.7386717447083544 \n",
            "Recall is 0.7175180586653798 \n",
            "Fscore is 0.7256778139607727 \n",
            "Support is None \n",
            "AUC is 0.7175180586653798\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'\\nw/o resample \\n\\n Enc:WOEEncoder + rf + f_regression\\nPrecision is 0.754037598729604 \\nRecall is 0.7040906524839553 \\nFscore is 0.7209070584477802 \\nSupport is None \\nAUC is 0.7040906524839554\\n\\n\\nw/ resample\\nlr + Enc:OrdinalEncoder + f_classif\\nPrecision is 0.7240856738735097 \\nRecall is 0.7491921945566913 \\nFscore is 0.7333033718496091 \\nSupport is None \\nAUC is 0.7491921945566912\\n[[972 230]\\n [139 309]]\\n'"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QENMpBo2LQrt"
      },
      "source": [
        "# Getting Features & Graphs\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pccNoyV-4hFV"
      },
      "source": [
        "import pickle\n",
        "\n",
        "factor = 'SAO'\n",
        "filePath = 'drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/encoder/preprocessor.pkl'\n",
        "with open (filePath, 'rb') as f:\n",
        "      preprocessor = pickle.load(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Oh4b4krEEYz_"
      },
      "source": [
        "filePath = \"drive/My Drive/Colab Notebooks/preHospitalPrediction/project1/models/persistedModel.pkl\"\n",
        "with open (filePath, 'rb') as f:\n",
        "      model = pickle.load(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YVpAUN1bGpGS",
        "outputId": "5b4c5b54-75e2-4bcd-bffa-9bdf1145bdd9"
      },
      "source": [
        "model.__dict__"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'C': 0.1,\n",
              " 'class_weight': None,\n",
              " 'classes_': array([0, 1]),\n",
              " 'coef_': array([[ 0.93851846,  0.3614348 ,  1.0188307 ,  0.87795937,  1.39928017,\n",
              "          0.98527736,  1.30178076, -0.44200426,  0.13772724,  2.0491175 ,\n",
              "          1.21184455,  1.21153706,  0.4011225 ,  0.48824656,  0.34639473,\n",
              "          2.27843691,  1.90344557,  2.34111901,  1.83333343,  0.31496778,\n",
              "          0.74496371,  1.26405321,  0.90509633,  0.94722447,  0.36997935,\n",
              "         -0.60234813]]),\n",
              " 'dual': False,\n",
              " 'fit_intercept': True,\n",
              " 'intercept_': array([-0.19499749]),\n",
              " 'intercept_scaling': 1,\n",
              " 'l1_ratio': None,\n",
              " 'max_iter': 300,\n",
              " 'multi_class': 'auto',\n",
              " 'n_iter_': array([21], dtype=int32),\n",
              " 'n_jobs': None,\n",
              " 'penalty': 'l2',\n",
              " 'random_state': None,\n",
              " 'solver': 'lbfgs',\n",
              " 'tol': 0.0001,\n",
              " 'verbose': 0,\n",
              " 'warm_start': False}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OL0XO3INDlgk",
        "outputId": "0d3f86ee-c8e1-4981-efbe-1ff8f63ed995"
      },
      "source": [
        "preprocessor.__dict__"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'_encoder': WOEEncoder(cols=Index(['sex', 'smoke', 'highBloodPressure', 'atrialFibrillation', 'diabetes',\n",
              "        'coronaryHeartDisease', 'congestiveHeartFailure',\n",
              "        'anticoagulantMedicalHistory'],\n",
              "       dtype='object'),\n",
              "            drop_invariant=False, handle_missing='value', handle_unknown='value',\n",
              "            random_state=None, randomized=False, regularization=1.0,\n",
              "            return_df=True, sigma=0.05, verbose=0),\n",
              " '_featureEliminator': None,\n",
              " '_labelEncoder': LabelBinarizer(neg_label=0, pos_label=1, sparse_output=False),\n",
              " '_normalizer': Normalizer(copy=True, norm='l2'),\n",
              " '_pcaEncoder': None}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RFd8QOUNUvy6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 230
        },
        "outputId": "cf187b21-0f0f-47ef-ea27-749924afe223"
      },
      "source": [
        "# featureNames = preprocessor._featureName\n",
        "# featurePairs = zip(bestModel.feature_importances_, featureNames)\n",
        "\n",
        "importances = model.feature_importances_\n",
        "std = np.std([tree.feature_importances_ for tree in model.estimators_],\n",
        "             axis=0)\n",
        "indices = np.argsort(importances)[::-1]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-28-c0a2c02853ed>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfeatureNames\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpreprocessor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_featureName\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mfeaturePairs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbestModel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeature_importances_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeatureNames\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mimportances\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbestModel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeature_importances_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m std = np.std([tree.feature_importances_ for tree in bestModel.estimators_],\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'PreProcessor' object has no attribute '_featureName'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fdxhzRYtMLTp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "outputId": "5192e484-c904-4855-9112-e88154094ee3"
      },
      "source": [
        "print(preprocessor._encoder.get_params())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'cols': Index(['P_AF', 'Anterior circulation infarction', 'LVO',\n",
            "       'Degree of stenosis of intracranial arteries',\n",
            "       'Moderate to severe intracranial artery stenosis', 'Newly diagnosed AF',\n",
            "       'D_AF'],\n",
            "      dtype='object'), 'drop_invariant': False, 'handle_missing': 'value', 'handle_unknown': 'value', 'mapping': [{'col': 'P_AF', 'mapping': False    1\n",
            "True     2\n",
            "NaN     -2\n",
            "dtype: int64, 'data_type': dtype('O')}, {'col': 'Anterior circulation infarction', 'mapping': False    1\n",
            "True     2\n",
            "NaN     -2\n",
            "dtype: int64, 'data_type': dtype('O')}, {'col': 'LVO', 'mapping': False    1\n",
            "True     2\n",
            "NaN     -2\n",
            "dtype: int64, 'data_type': dtype('O')}, {'col': 'Degree of stenosis of intracranial arteries', 'mapping': 1.0    1\n",
            "0.0    2\n",
            "3.0    3\n",
            "2.0    4\n",
            "NaN   -2\n",
            "dtype: int64, 'data_type': dtype('O')}, {'col': 'Moderate to severe intracranial artery stenosis', 'mapping': False    1\n",
            "True     2\n",
            "NaN     -2\n",
            "dtype: int64, 'data_type': dtype('O')}, {'col': 'Newly diagnosed AF', 'mapping': False    1\n",
            "True     2\n",
            "NaN     -2\n",
            "dtype: int64, 'data_type': dtype('O')}, {'col': 'D_AF', 'mapping': False    1\n",
            "True     2\n",
            "NaN     -2\n",
            "dtype: int64, 'data_type': dtype('O')}], 'return_df': True, 'verbose': 0}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j9sZI4IX8Nwv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 538
        },
        "outputId": "8d74c3ab-456e-4921-be0b-11a68f6a24cb"
      },
      "source": [
        "newlist = []\n",
        "print()\n",
        "for jsonObj in preprocessor._encoder.get_params()['mapping']: # .mapping:\n",
        "  col = jsonObj['col']\n",
        "  mapping = jsonObj['mapping'].to_frame()\n",
        "  print(mapping)\n",
        "  for i in range(len(mapping.columns)):\n",
        "    for j in range(len(mapping.values)):\n",
        "      newlist.append((col, mapping.columns[i], mapping.index[j], mapping.iloc[j,i]))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\n",
            "       0\n",
            "False  1\n",
            "True   2\n",
            "NaN   -2\n",
            "       0\n",
            "False  1\n",
            "True   2\n",
            "NaN   -2\n",
            "       0\n",
            "False  1\n",
            "True   2\n",
            "NaN   -2\n",
            "     0\n",
            "1.0  1\n",
            "0.0  2\n",
            "3.0  3\n",
            "2.0  4\n",
            "NaN -2\n",
            "       0\n",
            "False  1\n",
            "True   2\n",
            "NaN   -2\n",
            "       0\n",
            "False  1\n",
            "True   2\n",
            "NaN   -2\n",
            "       0\n",
            "False  1\n",
            "True   2\n",
            "NaN   -2\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LOmeqgN_CeuS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 728
        },
        "outputId": "0747912b-f697-4f4b-8065-12ff67bf87c2"
      },
      "source": [
        "import pandas as pd\n",
        "second_df = pd.DataFrame(newlist, columns =['ColName', 'newColName', 'Encoded Value', 'mappedValue']) \n",
        "second_df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ColName</th>\n",
              "      <th>newColName</th>\n",
              "      <th>Encoded Value</th>\n",
              "      <th>mappedValue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>P_AF</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>P_AF</td>\n",
              "      <td>0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>P_AF</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Anterior circulation infarction</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Anterior circulation infarction</td>\n",
              "      <td>0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Anterior circulation infarction</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>LVO</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>LVO</td>\n",
              "      <td>0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>LVO</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Moderate to severe intracranial artery stenosis</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Moderate to severe intracranial artery stenosis</td>\n",
              "      <td>0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Moderate to severe intracranial artery stenosis</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Newly diagnosed AF</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Newly diagnosed AF</td>\n",
              "      <td>0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newly diagnosed AF</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>D_AF</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>D_AF</td>\n",
              "      <td>0</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>D_AF</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                            ColName  ...  mappedValue\n",
              "0                                              P_AF  ...            1\n",
              "1                                              P_AF  ...            2\n",
              "2                                              P_AF  ...           -2\n",
              "3                   Anterior circulation infarction  ...            1\n",
              "4                   Anterior circulation infarction  ...            2\n",
              "5                   Anterior circulation infarction  ...           -2\n",
              "6                                               LVO  ...            1\n",
              "7                                               LVO  ...            2\n",
              "8                                               LVO  ...           -2\n",
              "9       Degree of stenosis of intracranial arteries  ...            1\n",
              "10      Degree of stenosis of intracranial arteries  ...            2\n",
              "11      Degree of stenosis of intracranial arteries  ...            3\n",
              "12      Degree of stenosis of intracranial arteries  ...            4\n",
              "13      Degree of stenosis of intracranial arteries  ...           -2\n",
              "14  Moderate to severe intracranial artery stenosis  ...            1\n",
              "15  Moderate to severe intracranial artery stenosis  ...            2\n",
              "16  Moderate to severe intracranial artery stenosis  ...           -2\n",
              "17                               Newly diagnosed AF  ...            1\n",
              "18                               Newly diagnosed AF  ...            2\n",
              "19                               Newly diagnosed AF  ...           -2\n",
              "20                                             D_AF  ...            1\n",
              "21                                             D_AF  ...            2\n",
              "22                                             D_AF  ...           -2\n",
              "\n",
              "[23 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WJMe9mcn9bxh"
      },
      "source": [
        "dfList = []\n",
        "for jsonObj in preprocessor._encoder.get_params()['mapping']:\n",
        "  col = jsonObj['col']\n",
        "  mapping = jsonObj['mapping']\n",
        "  for i in range(len(mapping.values)-1):\n",
        "    dfList.append((col,mapping.index[i],mapping[i]))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hpm7SbpP-Xr2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "outputId": "b66d217b-3f02-4ee4-e3a6-b5d72a0feb43"
      },
      "source": [
        "df = pd.DataFrame(dfList, columns =['ColName', 'OriginalValue', 'Encoded Value']) \n",
        "df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ColName</th>\n",
              "      <th>OriginalValue</th>\n",
              "      <th>Encoded Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>P_AF</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>P_AF</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Anterior circulation infarction</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Anterior circulation infarction</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>LVO</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>LVO</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Degree of stenosis of intracranial arteries</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Moderate to severe intracranial artery stenosis</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Moderate to severe intracranial artery stenosis</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Newly diagnosed AF</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newly diagnosed AF</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>D_AF</td>\n",
              "      <td>False</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>D_AF</td>\n",
              "      <td>True</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                            ColName  ... Encoded Value\n",
              "0                                              P_AF  ...             1\n",
              "1                                              P_AF  ...             2\n",
              "2                   Anterior circulation infarction  ...             1\n",
              "3                   Anterior circulation infarction  ...             2\n",
              "4                                               LVO  ...             1\n",
              "5                                               LVO  ...             2\n",
              "6       Degree of stenosis of intracranial arteries  ...             2\n",
              "7       Degree of stenosis of intracranial arteries  ...             1\n",
              "8       Degree of stenosis of intracranial arteries  ...             4\n",
              "9       Degree of stenosis of intracranial arteries  ...             3\n",
              "10  Moderate to severe intracranial artery stenosis  ...             1\n",
              "11  Moderate to severe intracranial artery stenosis  ...             2\n",
              "12                               Newly diagnosed AF  ...             1\n",
              "13                               Newly diagnosed AF  ...             2\n",
              "14                                             D_AF  ...             1\n",
              "15                                             D_AF  ...             2\n",
              "\n",
              "[16 rows x 3 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u_i8kctjD2Hw"
      },
      "source": [
        "# # pd.set_option('display.max_rows', 80)\n",
        "# joinedDf = df.merge(second_df, on=['Encoded Value', 'ColName'], how='left')\n",
        "\n",
        "# joinedDf.to_csv(\"drive/My Drive/Colab Notebooks/preHospitalPrediction/project2/{factor}/encoder/mapping.csv\".format(factor=factor), encoding='utf_8_sig')\n",
        "# joinedDf\n",
        "\n",
        "df.to_csv(\"drive/My Drive/Colab Notebooks/preHospitalPrediction/project2/{factor}/encoder/mapping.csv\".format(factor=factor), encoding='utf_8_sig')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t2v3dMiIAlU5"
      },
      "source": [
        "featureNames = preprocessor._featureName\n",
        "featurePairs = zip(bestModel.feature_importances_, featureNames)\n",
        "\n",
        "importances = bestModel.feature_importances_\n",
        "std = np.std([tree.feature_importances_ for tree in bestModel.estimators_],\n",
        "             axis=0)\n",
        "indices = np.argsort(importances)[::-1]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oP8bde1QDFed",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 353
        },
        "outputId": "eea427f4-5a5d-425e-dac2-16e185f39259"
      },
      "source": [
        "sortedList = list(featurePairs)\n",
        "sortedList.sort(key=lambda x: x[0], reverse=True)\n",
        "sortedList"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[(0.19721467481240051, 'Degree of stenosis of intracranial arteries'),\n",
              " (0.12438972280644871, 'Moderate to severe intracranial artery stenosis'),\n",
              " (0.11162136718514894, 'P_AF'),\n",
              " (0.06468712484145923, 'Temperature'),\n",
              " (0.06235557105768048, 'LVO'),\n",
              " (0.05831967790497471, 'SBP'),\n",
              " (0.05691422302339188, 'Respiration'),\n",
              " (0.042560763279245156, 'Newly diagnosed AF'),\n",
              " (0.04133385883167586, 'Anterior circulation infarction'),\n",
              " (0.03354396189942769, 'B_NIHSS score'),\n",
              " (0.02800031314208681, 'D_AF'),\n",
              " (0.0271235658843248, 'Age'),\n",
              " (0.024522201034194738, 'B_mRS score'),\n",
              " (0.022668082440332995, 'GCS score'),\n",
              " (0.02230684695729029, 'WBC'),\n",
              " (0.02211984623908493, 'Essen score'),\n",
              " (0.02104506283026938, 'INR'),\n",
              " (0.0183277132051662, 'D-dimer'),\n",
              " (0.012654964278322984, 'Hs-CRP（mg/L）'),\n",
              " (0.008290458347073596, 'Hb')]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I5K2evSdO-U8"
      },
      "source": [
        "from sklearn.tree import export_graphviz\n",
        "from subprocess import call\n",
        "from sklearn import tree\n",
        "\n",
        "for i, tree in enumerate(model.estimators_):\n",
        "\n",
        "  # Export as dot file\n",
        "  dot_data = export_graphviz(tree, out_file='tree_{i}.dot'.format(i=i), \n",
        "                  feature_names = featureNames,\n",
        "                  class_names = [\"False\",  \"True\"],\n",
        "                  rounded = True, \n",
        "                  proportion = False, \n",
        "                  precision = 2,\n",
        "                  filled = True)\n",
        "  # print(dot_data)\n",
        "  # dot_data = treeCleanup(str(dot_data))\n",
        "\n",
        "  # Convert to png using system command (requires Graphviz)\n",
        "  call(['dot', '-Tpng', 'tree_{i}.dot'.format(i=i), '-o',  'drive/My Drive/Colab Notebooks/preHospitalPrediction/project2/{factor}/graphs/trees/tree_{i}.png'.format(i = i, factor = factor), '-Gdpi=600'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Hbnv2VJyPbKd"
      },
      "source": [
        "import category_encoders as ce\n",
        "\n",
        "\n",
        "saveFile = True\n",
        "debugMode = False\n",
        "models = ['rf', 'lr']\n",
        "# models = ['rf', 'lr', 'ada', 'xgb', 'knn'] # gnb\n",
        "\n",
        "# select encoding type\n",
        "encs = [\n",
        "      'OrdinalEncoder',\n",
        "]\n",
        "\n",
        "# select score function for feature selection\n",
        "scoreFunctions=[\n",
        "      'f_classif',    #(0.791)\n",
        "]\n",
        "\n",
        "runAll(models, encs=encs, scoreFunctions=scoreFunctions)\n",
        "\n",
        "\n",
        "\"\"\"\n",
        "w/o resample \n",
        "\n",
        " Enc:WOEEncoder + rf + f_regression\n",
        "Precision is 0.754037598729604 \n",
        "Recall is 0.7040906524839553 \n",
        "Fscore is 0.7209070584477802 \n",
        "Support is None \n",
        "AUC is 0.7040906524839554\n",
        "\n",
        "\n",
        "w/ resample\n",
        "lr + Enc:OrdinalEncoder + f_classif\n",
        "Precision is 0.7240856738735097 \n",
        "Recall is 0.7491921945566913 \n",
        "Fscore is 0.7333033718496091 \n",
        "Support is None \n",
        "AUC is 0.7491921945566912\n",
        "[[972 230]\n",
        " [139 309]]\n",
        "\"\"\""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}